0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 08                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 02                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 01                                        ; num results
0000015: 7f                                        ; i32
; type 2
0000016: 60                                        ; func
0000017: 03                                        ; num params
0000018: 7f                                        ; i32
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 01                                        ; num params
000001f: 7c                                        ; f64
0000020: 01                                        ; num results
0000021: 7c                                        ; f64
; type 4
0000022: 60                                        ; func
0000023: 01                                        ; num params
0000024: 7c                                        ; f64
0000025: 01                                        ; num results
0000026: 7f                                        ; i32
; type 5
0000027: 60                                        ; func
0000028: 00                                        ; num params
0000029: 01                                        ; num results
000002a: 7f                                        ; i32
; type 6
000002b: 60                                        ; func
000002c: 02                                        ; num params
000002d: 7f                                        ; i32
000002e: 7c                                        ; f64
000002f: 01                                        ; num results
0000030: 7c                                        ; f64
; type 7
0000031: 60                                        ; func
0000032: 03                                        ; num params
0000033: 7f                                        ; i32
0000034: 7c                                        ; f64
0000035: 7f                                        ; i32
0000036: 01                                        ; num results
0000037: 7f                                        ; i32
0000009: 2e                                        ; FIXUP section size
; section "Import" (2)
0000038: 02                                        ; section code
0000039: 00                                        ; section size (guess)
000003a: 0f                                        ; num imports
; import header 0
000003b: 07                                        ; string length
000003c: 636f 6e73 6f6c 65                        console  ; import module name
0000043: 03                                        ; string length
0000044: 6c6f 67                                  log  ; import field name
0000047: 00                                        ; import kind
0000048: 00                                        ; import signature index
; import header 1
0000049: 07                                        ; string length
000004a: 636f 6e73 6f6c 65                        console  ; import module name
0000051: 04                                        ; string length
0000052: 7761 726e                                warn  ; import field name
0000056: 00                                        ; import kind
0000057: 00                                        ; import signature index
; import header 2
0000058: 07                                        ; string length
0000059: 636f 6e73 6f6c 65                        console  ; import module name
0000060: 04                                        ; string length
0000061: 696e 666f                                info  ; import field name
0000065: 00                                        ; import kind
0000066: 00                                        ; import signature index
; import header 3
0000067: 07                                        ; string length
0000068: 636f 6e73 6f6c 65                        console  ; import module name
000006f: 05                                        ; string length
0000070: 6572 726f 72                             error  ; import field name
0000075: 00                                        ; import kind
0000076: 00                                        ; import signature index
; import header 4
0000077: 08                                        ; string length
0000078: 646f 6375 6d65 6e74                      document  ; import module name
0000080: 0e                                        ; string length
0000081: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
000008f: 00                                        ; import kind
0000090: 00                                        ; import signature index
; import header 5
0000091: 08                                        ; string length
0000092: 646f 6375 6d65 6e74                      document  ; import module name
000009a: 10                                        ; string length
000009b: 7772 6974 6545 6c65 6d65 6e74 5465 7874  writeElementText  ; import field name
00000ab: 00                                        ; import kind
00000ac: 01                                        ; import signature index
; import header 6
00000ad: 08                                        ; string length
00000ae: 646f 6375 6d65 6e74                      document  ; import module name
00000b6: 0d                                        ; string length
00000b7: 6372 6561 7465 456c 656d 656e 74         createElement  ; import field name
00000c4: 00                                        ; import kind
00000c5: 00                                        ; import signature index
; import header 7
00000c6: 08                                        ; string length
00000c7: 646f 6375 6d65 6e74                      document  ; import module name
00000cf: 0c                                        ; string length
00000d0: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
00000dc: 00                                        ; import kind
00000dd: 02                                        ; import signature index
; import header 8
00000de: 08                                        ; string length
00000df: 646f 6375 6d65 6e74                      document  ; import module name
00000e7: 0b                                        ; string length
00000e8: 6170 7065 6e64 4368 696c 64              appendChild  ; import field name
00000f3: 00                                        ; import kind
00000f4: 01                                        ; import signature index
; import header 9
00000f5: 04                                        ; string length
00000f6: 4d61 7468                                Math  ; import module name
00000fa: 03                                        ; string length
00000fb: 6578 70                                  exp  ; import field name
00000fe: 00                                        ; import kind
00000ff: 03                                        ; import signature index
; import header 10
0000100: 06                                        ; string length
0000101: 7374 7269 6e67                           string  ; import module name
0000107: 08                                        ; string length
0000108: 746f 5374 7269 6e67                      toString  ; import field name
0000110: 00                                        ; import kind
0000111: 00                                        ; import signature index
; import header 11
0000112: 06                                        ; string length
0000113: 7374 7269 6e67                           string  ; import module name
0000119: 03                                        ; string length
000011a: 6164 64                                  add  ; import field name
000011d: 00                                        ; import kind
000011e: 01                                        ; import signature index
; import header 12
000011f: 06                                        ; string length
0000120: 7374 7269 6e67                           string  ; import module name
0000126: 08                                        ; string length
0000127: 746f 5374 7269 6e67                      toString  ; import field name
000012f: 00                                        ; import kind
0000130: 04                                        ; import signature index
; import header 13
0000131: 06                                        ; string length
0000132: 7374 7269 6e67                           string  ; import module name
0000138: 08                                        ; string length
0000139: 746f 5374 7269 6e67                      toString  ; import field name
0000141: 00                                        ; import kind
0000142: 00                                        ; import signature index
; import header 14
0000143: 03                                        ; string length
0000144: 656e 76                                  env  ; import module name
0000147: 0a                                        ; string length
0000148: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000152: 02                                        ; import kind
0000153: 00                                        ; limits: flags
0000154: 01                                        ; limits: initial
; move data: [3a, 155) -> [3b, 156)
0000039: 9b02                                      ; FIXUP section size
; section "Function" (3)
0000156: 03                                        ; section code
0000157: 00                                        ; section size (guess)
0000158: 0c                                        ; num functions
0000159: 05                                        ; function 0 signature index
000015a: 06                                        ; function 1 signature index
000015b: 07                                        ; function 2 signature index
000015c: 05                                        ; function 3 signature index
000015d: 05                                        ; function 4 signature index
000015e: 05                                        ; function 5 signature index
000015f: 05                                        ; function 6 signature index
0000160: 05                                        ; function 7 signature index
0000161: 05                                        ; function 8 signature index
0000162: 05                                        ; function 9 signature index
0000163: 05                                        ; function 10 signature index
0000164: 05                                        ; function 11 signature index
0000157: 0d                                        ; FIXUP section size
; section "Global" (6)
0000165: 06                                        ; section code
0000166: 00                                        ; section size (guess)
0000167: 03                                        ; num globals
0000168: 7f                                        ; i32
0000169: 01                                        ; global mutability
000016a: 41                                        ; i32.const
000016b: 01                                        ; i32 literal
000016c: 0b                                        ; end
000016d: 7f                                        ; i32
000016e: 01                                        ; global mutability
000016f: 41                                        ; i32.const
0000170: 0e                                        ; i32 literal
0000171: 0b                                        ; end
0000172: 7f                                        ; i32
0000173: 01                                        ; global mutability
0000174: 41                                        ; i32.const
0000175: c500                                      ; i32 literal
0000177: 0b                                        ; end
0000166: 11                                        ; FIXUP section size
; section "Export" (7)
0000178: 07                                        ; section code
0000179: 00                                        ; section size (guess)
000017a: 03                                        ; num exports
000017b: 06                                        ; string length
000017c: 5275 6e41 7070                           RunApp  ; export name
0000182: 00                                        ; export kind
0000183: 0e                                        ; export func index
0000184: 0a                                        ; string length
0000185: 506f 6973 736f 6e50 4446                 PoissonPDF  ; export name
000018f: 00                                        ; export kind
0000190: 0f                                        ; export func index
0000191: 0d                                        ; string length
0000192: 4469 7370 6c61 7952 6573 756c 74         DisplayResult  ; export name
000019f: 00                                        ; export kind
00001a0: 10                                        ; export func index
0000179: 27                                        ; FIXUP section size
; section "Code" (10)
00001a1: 0a                                        ; section code
00001a2: 00                                        ; section size (guess)
00001a3: 0c                                        ; num functions
; function body 0
00001a4: 00                                        ; func body size (guess)
00001a5: 01                                        ; local decl count
00001a6: 04                                        ; local type count
00001a7: 7f                                        ; i32
00001a8: 41                                        ; i32.const
00001a9: db00                                      ; i32 literal
00001ab: 10                                        ; call
00001ac: 04                                        ; function index
00001ad: 21                                        ; local.set
00001ae: 00                                        ; local index
00001af: 41                                        ; i32.const
00001b0: e000                                      ; i32 literal
00001b2: 10                                        ; call
00001b3: 04                                        ; function index
00001b4: 21                                        ; local.set
00001b5: 01                                        ; local index
00001b6: 41                                        ; i32.const
00001b7: e600                                      ; i32 literal
00001b9: 10                                        ; call
00001ba: 06                                        ; function index
00001bb: 21                                        ; local.set
00001bc: 02                                        ; local index
00001bd: 41                                        ; i32.const
00001be: e800                                      ; i32 literal
00001c0: 10                                        ; call
00001c1: 06                                        ; function index
00001c2: 21                                        ; local.set
00001c3: 03                                        ; local index
00001c4: 20                                        ; local.get
00001c5: 00                                        ; local index
00001c6: 23                                        ; global.get
00001c7: 00                                        ; global index
00001c8: 10                                        ; call
00001c9: 05                                        ; function index
00001ca: 20                                        ; local.get
00001cb: 02                                        ; local index
00001cc: 23                                        ; global.get
00001cd: 01                                        ; global index
00001ce: 10                                        ; call
00001cf: 05                                        ; function index
00001d0: 20                                        ; local.get
00001d1: 03                                        ; local index
00001d2: 23                                        ; global.get
00001d3: 02                                        ; global index
00001d4: 10                                        ; call
00001d5: 05                                        ; function index
00001d6: 20                                        ; local.get
00001d7: 01                                        ; local index
00001d8: 20                                        ; local.get
00001d9: 02                                        ; local index
00001da: 10                                        ; call
00001db: 08                                        ; function index
00001dc: 20                                        ; local.get
00001dd: 01                                        ; local index
00001de: 20                                        ; local.get
00001df: 03                                        ; local index
00001e0: 10                                        ; call
00001e1: 08                                        ; function index
00001e2: 20                                        ; local.get
00001e3: 01                                        ; local index
00001e4: 41                                        ; i32.const
00001e5: ea00                                      ; i32 literal
00001e7: 41                                        ; i32.const
00001e8: f000                                      ; i32 literal
00001ea: 10                                        ; call
00001eb: 07                                        ; function index
00001ec: 20                                        ; local.get
00001ed: 02                                        ; local index
00001ee: 41                                        ; i32.const
00001ef: 8d01                                      ; i32 literal
00001f1: 41                                        ; i32.const
00001f2: 9301                                      ; i32 literal
00001f4: 10                                        ; call
00001f5: 07                                        ; function index
00001f6: 20                                        ; local.get
00001f7: 03                                        ; local index
00001f8: 41                                        ; i32.const
00001f9: af01                                      ; i32 literal
00001fb: 41                                        ; i32.const
00001fc: b501                                      ; i32 literal
00001fe: 10                                        ; call
00001ff: 07                                        ; function index
0000200: 41                                        ; i32.const
0000201: d301                                      ; i32 literal
0000203: 10                                        ; call
0000204: 00                                        ; function index
0000205: 23                                        ; global.get
0000206: 01                                        ; global index
0000207: 10                                        ; call
0000208: 01                                        ; function index
0000209: 23                                        ; global.get
000020a: 02                                        ; global index
000020b: 10                                        ; call
000020c: 02                                        ; function index
000020d: 41                                        ; i32.const
000020e: f501                                      ; i32 literal
0000210: 10                                        ; call
0000211: 03                                        ; function index
0000212: 41                                        ; i32.const
0000213: 00                                        ; i32 literal
0000214: 0f                                        ; return
0000215: 0b                                        ; end
00001a4: 71                                        ; FIXUP func body size
; function body 1
0000216: 00                                        ; func body size (guess)
0000217: 01                                        ; local decl count
0000218: 01                                        ; local type count
0000219: 7c                                        ; f64
000021a: 44                                        ; f64.const
000021b: 0000 0000 0000 0000                       ; f64 literal
0000223: 20                                        ; local.get
0000224: 01                                        ; local index
0000225: a1                                        ; f64.sub
0000226: 10                                        ; call
0000227: 09                                        ; function index
0000228: 21                                        ; local.set
0000229: 02                                        ; local index
000022a: 02                                        ; block
000022b: 40                                        ; void
000022c: 03                                        ; loop
000022d: 40                                        ; void
000022e: 20                                        ; local.get
000022f: 00                                        ; local index
0000230: 41                                        ; i32.const
0000231: 01                                        ; i32 literal
0000232: 4e                                        ; i32.ge_s
0000233: 45                                        ; i32.eqz
0000234: 0d                                        ; br_if
0000235: 01                                        ; break depth
0000236: 20                                        ; local.get
0000237: 02                                        ; local index
0000238: 20                                        ; local.get
0000239: 01                                        ; local index
000023a: 20                                        ; local.get
000023b: 00                                        ; local index
000023c: b7                                        ; f64.convert_i32_s
000023d: a3                                        ; f64.div
000023e: a2                                        ; f64.mul
000023f: 21                                        ; local.set
0000240: 02                                        ; local index
0000241: 20                                        ; local.get
0000242: 00                                        ; local index
0000243: 41                                        ; i32.const
0000244: 01                                        ; i32 literal
0000245: 6b                                        ; i32.sub
0000246: 21                                        ; local.set
0000247: 00                                        ; local index
0000248: 0c                                        ; br
0000249: 00                                        ; break depth
000024a: 0b                                        ; end
000024b: 0b                                        ; end
000024c: 20                                        ; local.get
000024d: 02                                        ; local index
000024e: 0f                                        ; return
000024f: 0b                                        ; end
0000216: 39                                        ; FIXUP func body size
; function body 2
0000250: 00                                        ; func body size (guess)
0000251: 01                                        ; local decl count
0000252: 01                                        ; local type count
0000253: 7c                                        ; f64
0000254: 20                                        ; local.get
0000255: 00                                        ; local index
0000256: 20                                        ; local.get
0000257: 01                                        ; local index
0000258: 10                                        ; call
0000259: 0f                                        ; function index
000025a: 21                                        ; local.set
000025b: 03                                        ; local index
000025c: 41                                        ; i32.const
000025d: ae02                                      ; i32 literal
000025f: 10                                        ; call
0000260: 04                                        ; function index
0000261: 41                                        ; i32.const
0000262: b502                                      ; i32 literal
0000264: 20                                        ; local.get
0000265: 00                                        ; local index
0000266: 10                                        ; call
0000267: 0a                                        ; function index
0000268: 10                                        ; call
0000269: 0b                                        ; function index
000026a: 41                                        ; i32.const
000026b: db02                                      ; i32 literal
000026d: 10                                        ; call
000026e: 0b                                        ; function index
000026f: 20                                        ; local.get
0000270: 01                                        ; local index
0000271: 10                                        ; call
0000272: 0c                                        ; function index
0000273: 10                                        ; call
0000274: 0b                                        ; function index
0000275: 41                                        ; i32.const
0000276: de02                                      ; i32 literal
0000278: 10                                        ; call
0000279: 0b                                        ; function index
000027a: 20                                        ; local.get
000027b: 03                                        ; local index
000027c: 10                                        ; call
000027d: 0c                                        ; function index
000027e: 10                                        ; call
000027f: 0b                                        ; function index
0000280: 41                                        ; i32.const
0000281: e402                                      ; i32 literal
0000283: 10                                        ; call
0000284: 0b                                        ; function index
0000285: 10                                        ; call
0000286: 05                                        ; function index
0000287: 41                                        ; i32.const
0000288: e602                                      ; i32 literal
000028a: 10                                        ; call
000028b: 04                                        ; function index
000028c: 41                                        ; i32.const
000028d: ed02                                      ; i32 literal
000028f: 41                                        ; i32.const
0000290: f302                                      ; i32 literal
0000292: 20                                        ; local.get
0000293: 02                                        ; local index
0000294: 10                                        ; call
0000295: 0d                                        ; function index
0000296: 10                                        ; call
0000297: 0b                                        ; function index
0000298: 10                                        ; call
0000299: 07                                        ; function index
000029a: 41                                        ; i32.const
000029b: 00                                        ; i32 literal
000029c: 0f                                        ; return
000029d: 0b                                        ; end
0000250: 4d                                        ; FIXUP func body size
; function body 3
000029e: 00                                        ; func body size (guess)
000029f: 00                                        ; local decl count
00002a0: 41                                        ; i32.const
00002a1: 8d03                                      ; i32 literal
00002a3: 0f                                        ; return
00002a4: 0b                                        ; end
000029e: 06                                        ; FIXUP func body size
; function body 4
00002a5: 00                                        ; func body size (guess)
00002a6: 00                                        ; local decl count
00002a7: 41                                        ; i32.const
00002a8: 9903                                      ; i32 literal
00002aa: 0f                                        ; return
00002ab: 0b                                        ; end
00002a5: 06                                        ; FIXUP func body size
; function body 5
00002ac: 00                                        ; func body size (guess)
00002ad: 00                                        ; local decl count
00002ae: 41                                        ; i32.const
00002af: ea03                                      ; i32 literal
00002b1: 0f                                        ; return
00002b2: 0b                                        ; end
00002ac: 06                                        ; FIXUP func body size
; function body 6
00002b3: 00                                        ; func body size (guess)
00002b4: 00                                        ; local decl count
00002b5: 41                                        ; i32.const
00002b6: f503                                      ; i32 literal
00002b8: 0f                                        ; return
00002b9: 0b                                        ; end
00002b3: 06                                        ; FIXUP func body size
; function body 7
00002ba: 00                                        ; func body size (guess)
00002bb: 00                                        ; local decl count
00002bc: 41                                        ; i32.const
00002bd: 8004                                      ; i32 literal
00002bf: 0f                                        ; return
00002c0: 0b                                        ; end
00002ba: 06                                        ; FIXUP func body size
; function body 8
00002c1: 00                                        ; func body size (guess)
00002c2: 00                                        ; local decl count
00002c3: 41                                        ; i32.const
00002c4: 9504                                      ; i32 literal
00002c6: 0f                                        ; return
00002c7: 0b                                        ; end
00002c1: 06                                        ; FIXUP func body size
; function body 9
00002c8: 00                                        ; func body size (guess)
00002c9: 00                                        ; local decl count
00002ca: 41                                        ; i32.const
00002cb: a104                                      ; i32 literal
00002cd: 0f                                        ; return
00002ce: 0b                                        ; end
00002c8: 06                                        ; FIXUP func body size
; function body 10
00002cf: 00                                        ; func body size (guess)
00002d0: 00                                        ; local decl count
00002d1: 41                                        ; i32.const
00002d2: c604                                      ; i32 literal
00002d4: 0f                                        ; return
00002d5: 0b                                        ; end
00002cf: 06                                        ; FIXUP func body size
; function body 11
00002d6: 00                                        ; func body size (guess)
00002d7: 00                                        ; local decl count
00002d8: 41                                        ; i32.const
00002d9: d404                                      ; i32 literal
00002db: 0f                                        ; return
00002dc: 0b                                        ; end
00002d6: 06                                        ; FIXUP func body size
; move data: [1a3, 2dd) -> [1a4, 2de)
00001a2: ba02                                      ; FIXUP section size
; section "Data" (11)
00002de: 0b                                        ; section code
00002df: 00                                        ; section size (guess)
00002e0: 20                                        ; num data segments
; data segment header 0
00002e1: 00                                      
00002e2: 41                                        ; i32.const
00002e3: 01                                        ; i32 literal
00002e4: 0b                                        ; end
00002e5: 0d                                        ; data segment size
; data segment data 0
00002e6: 4865 6c6c 6f20 576f 726c 6421 00          ; data segment data
; data segment header 1
00002f3: 00                                      
00002f4: 41                                        ; i32.const
00002f5: 0e                                        ; i32 literal
00002f6: 0b                                        ; end
00002f7: 37                                        ; data segment size
; data segment data 1
00002f8: 5468 6973 206d 6573 7361 6765 2063 6f6d 
0000308: 6573 2066 726f 6d20 6120 5669 7375 616c 
0000318: 4261 7369 632e 4e45 5420 6170 706c 6963 
0000328: 6174 696f 6e21 00                         ; data segment data
; data segment header 2
000032f: 00                                      
0000330: 41                                        ; i32.const
0000331: c500                                      ; i32 literal
0000333: 0b                                        ; end
0000334: 16                                        ; data segment size
; data segment data 2
0000335: 5765 6241 7373 656d 626c 7920 6974 2077 
0000345: 6f72 6b73 2100                            ; data segment data
; data segment header 3
000034b: 00                                      
000034c: 41                                        ; i32.const
000034d: db00                                      ; i32 literal
000034f: 0b                                        ; end
0000350: 05                                        ; data segment size
; data segment data 3
0000351: 7465 7874 00                              ; data segment data
; data segment header 4
0000356: 00                                      
0000357: 41                                        ; i32.const
0000358: e000                                      ; i32 literal
000035a: 0b                                        ; end
000035b: 06                                        ; data segment size
; data segment data 4
000035c: 6e6f 7465 7300                            ; data segment data
; data segment header 5
0000362: 00                                      
0000363: 41                                        ; i32.const
0000364: e600                                      ; i32 literal
0000366: 0b                                        ; end
0000367: 02                                        ; data segment size
; data segment data 5
0000368: 7000                                      ; data segment data
; data segment header 6
000036a: 00                                      
000036b: 41                                        ; i32.const
000036c: e800                                      ; i32 literal
000036e: 0b                                        ; end
000036f: 02                                        ; data segment size
; data segment data 6
0000370: 7000                                      ; data segment data
; data segment header 7
0000372: 00                                      
0000373: 41                                        ; i32.const
0000374: ea00                                      ; i32 literal
0000376: 0b                                        ; end
0000377: 06                                        ; data segment size
; data segment data 7
0000378: 7374 796c 6500                            ; data segment data
; data segment header 8
000037e: 00                                      
000037f: 41                                        ; i32.const
0000380: f000                                      ; i32 literal
0000382: 0b                                        ; end
0000383: 1d                                        ; data segment size
; data segment data 8
0000384: 6261 636b 6772 6f75 6e64 2d63 6f6c 6f72 
0000394: 3a20 6c69 6768 7467 7265 793b 00          ; data segment data
; data segment header 9
00003a1: 00                                      
00003a2: 41                                        ; i32.const
00003a3: 8d01                                      ; i32 literal
00003a5: 0b                                        ; end
00003a6: 06                                        ; data segment size
; data segment data 9
00003a7: 7374 796c 6500                            ; data segment data
; data segment header 10
00003ad: 00                                      
00003ae: 41                                        ; i32.const
00003af: 9301                                      ; i32 literal
00003b1: 0b                                        ; end
00003b2: 1c                                        ; data segment size
; data segment data 10
00003b3: 666f 6e74 2d73 697a 653a 2032 656d 3b20 
00003c3: 636f 6c6f 723a 2072 6564 3b00             ; data segment data
; data segment header 11
00003cf: 00                                      
00003d0: 41                                        ; i32.const
00003d1: af01                                      ; i32 literal
00003d3: 0b                                        ; end
00003d4: 06                                        ; data segment size
; data segment data 11
00003d5: 7374 796c 6500                            ; data segment data
; data segment header 12
00003db: 00                                      
00003dc: 41                                        ; i32.const
00003dd: b501                                      ; i32 literal
00003df: 0b                                        ; end
00003e0: 1e                                        ; data segment size
; data segment data 12
00003e1: 666f 6e74 2d73 697a 653a 2035 656d 3b20 
00003f1: 636f 6c6f 723a 2067 7265 656e 3b00        ; data segment data
; data segment header 13
00003ff: 00                                      
0000400: 41                                        ; i32.const
0000401: d301                                      ; i32 literal
0000403: 0b                                        ; end
0000404: 22                                        ; data segment size
; data segment data 13
0000405: 4465 6275 6720 7465 7874 206d 6573 7361 
0000415: 6765 2064 6973 706c 6179 2062 656c 6f77 
0000425: 3a00                                      ; data segment data
; data segment header 14
0000427: 00                                      
0000428: 41                                        ; i32.const
0000429: f501                                      ; i32 literal
000042b: 0b                                        ; end
000042c: 39                                        ; data segment size
; data segment data 14
000042d: 5472 7920 746f 2064 6973 706c 6179 2061 
000043d: 6e20 6572 726f 7220 6d65 7373 6167 6520 
000044d: 6f6e 206a 6176 6173 6372 6970 7420 636f 
000045d: 6e73 6f6c 652e 2e2e 00                    ; data segment data
; data segment header 15
0000466: 00                                      
0000467: 41                                        ; i32.const
0000468: ae02                                      ; i32 literal
000046a: 0b                                        ; end
000046b: 07                                        ; data segment size
; data segment data 15
000046c: 7265 7375 6c74 00                         ; data segment data
; data segment header 16
0000473: 00                                      
0000474: 41                                        ; i32.const
0000475: b502                                      ; i32 literal
0000477: 0b                                        ; end
0000478: 26                                        ; data segment size
; data segment data 16
0000479: 5468 6520 6361 6c63 756c 6174 696f 6e20 
0000489: 7265 7375 6c74 206f 6620 506f 6973 736f 
0000499: 6e50 4446 2800                            ; data segment data
; data segment header 17
000049f: 00                                      
00004a0: 41                                        ; i32.const
00004a1: db02                                      ; i32 literal
00004a3: 0b                                        ; end
00004a4: 03                                        ; data segment size
; data segment data 17
00004a5: 2c20 00                                   ; data segment data
; data segment header 18
00004a8: 00                                      
00004a9: 41                                        ; i32.const
00004aa: de02                                      ; i32 literal
00004ac: 0b                                        ; end
00004ad: 06                                        ; data segment size
; data segment data 18
00004ae: 2920 6973 2000                            ; data segment data
; data segment header 19
00004b4: 00                                      
00004b5: 41                                        ; i32.const
00004b6: e402                                      ; i32 literal
00004b8: 0b                                        ; end
00004b9: 02                                        ; data segment size
; data segment data 19
00004ba: 2100                                      ; data segment data
; data segment header 20
00004bc: 00                                      
00004bd: 41                                        ; i32.const
00004be: e602                                      ; i32 literal
00004c0: 0b                                        ; end
00004c1: 07                                        ; data segment size
; data segment data 20
00004c2: 7265 7375 6c74 00                         ; data segment data
; data segment header 21
00004c9: 00                                      
00004ca: 41                                        ; i32.const
00004cb: ed02                                      ; i32 literal
00004cd: 0b                                        ; end
00004ce: 06                                        ; data segment size
; data segment data 21
00004cf: 7374 796c 6500                            ; data segment data
; data segment header 22
00004d5: 00                                      
00004d6: 41                                        ; i32.const
00004d7: f302                                      ; i32 literal
00004d9: 0b                                        ; end
00004da: 1a                                        ; data segment size
; data segment data 22
00004db: 636f 6c6f 723a 2067 7265 656e 3b20 666f 
00004eb: 6e74 2d73 697a 653a 2000                  ; data segment data
; data segment header 23
00004f5: 00                                      
00004f6: 41                                        ; i32.const
00004f7: 8d03                                      ; i32 literal
00004f9: 0b                                        ; end
00004fa: 0c                                        ; data segment size
; data segment data 23
00004fb: 4865 6c6c 6f57 6f72 6c64 2100             ; data segment data
; data segment header 24
0000507: 00                                      
0000508: 41                                        ; i32.const
0000509: 9903                                      ; i32 literal
000050b: 0b                                        ; end
000050c: 51                                        ; data segment size
; data segment data 24
000050d: 4120 6865 6c6c 6f20 776f 726c 6420 6465 
000051d: 6d6f 2070 726f 6a65 6374 2066 6f72 2056 
000052d: 6973 7561 6c42 6173 6963 2e4e 4554 2057 
000053d: 6562 4173 7365 6d62 6c79 2063 6f6d 7069 
000054d: 6c65 7220 616e 6420 7275 6e74 696d 652e 
000055d: 00                                        ; data segment data
; data segment header 25
000055e: 00                                      
000055f: 41                                        ; i32.const
0000560: ea03                                      ; i32 literal
0000562: 0b                                        ; end
0000563: 0b                                        ; data segment size
; data segment data 25
0000564: 7869 6567 7569 6761 6e67 00               ; data segment data
; data segment header 26
000056f: 00                                      
0000570: 41                                        ; i32.const
0000571: f503                                      ; i32 literal
0000573: 0b                                        ; end
0000574: 0b                                        ; data segment size
; data segment data 26
0000575: 4865 6c6c 6f57 6f72 6c64 00               ; data segment data
; data segment header 27
0000580: 00                                      
0000581: 41                                        ; i32.const
0000582: 8004                                      ; i32 literal
0000584: 0b                                        ; end
0000585: 16                                        ; data segment size
; data segment data 27
0000586: 436f 7079 7269 6768 7420 c2a9 204d 4954 
0000596: 2032 3031 3900                            ; data segment data
; data segment header 28
000059c: 00                                      
000059d: 41                                        ; i32.const
000059e: 9504                                      ; i32 literal
00005a0: 0b                                        ; end
00005a1: 0c                                        ; data segment size
; data segment data 28
00005a2: 4865 6c6c 6f57 6f72 6c64 2100             ; data segment data
; data segment header 29
00005ae: 00                                      
00005af: 41                                        ; i32.const
00005b0: a104                                      ; i32 literal
00005b2: 0b                                        ; end
00005b3: 25                                        ; data segment size
; data segment data 29
00005b4: 3837 3530 3337 3766 2d62 3665 372d 3466 
00005c4: 6235 2d38 3836 622d 3463 3366 6134 3531 
00005d4: 6563 3463 00                              ; data segment data
; data segment header 30
00005d9: 00                                      
00005da: 41                                        ; i32.const
00005db: c604                                      ; i32 literal
00005dd: 0b                                        ; end
00005de: 0e                                        ; data segment size
; data segment data 30
00005df: 3132 332e 3334 2e30 2e35 3436 3600        ; data segment data
; data segment header 31
00005ed: 00                                      
00005ee: 41                                        ; i32.const
00005ef: d404                                      ; i32 literal
00005f1: 0b                                        ; end
00005f2: 0a                                        ; data segment size
; data segment data 31
00005f3: 312e 302e 3939 2e37 3800                  ; data segment data
; move data: [2e0, 5fd) -> [2e1, 5fe)
00002df: 9d06                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 012e 0860 017f 017f 
0000010: 6002 7f7f 017f 6003 7f7f 7f01 7f60 017c 
0000020: 017c 6001 7c01 7f60 0001 7f60 027f 7c01 
0000030: 7c60 037f 7c7f 017f 029b 020f 0763 6f6e 
0000040: 736f 6c65 036c 6f67 0000 0763 6f6e 736f 
0000050: 6c65 0477 6172 6e00 0007 636f 6e73 6f6c 
0000060: 6504 696e 666f 0000 0763 6f6e 736f 6c65 
0000070: 0565 7272 6f72 0000 0864 6f63 756d 656e 
0000080: 740e 6765 7445 6c65 6d65 6e74 4279 4964 
0000090: 0000 0864 6f63 756d 656e 7410 7772 6974 
00000a0: 6545 6c65 6d65 6e74 5465 7874 0001 0864 
00000b0: 6f63 756d 656e 740d 6372 6561 7465 456c 
00000c0: 656d 656e 7400 0008 646f 6375 6d65 6e74 
00000d0: 0c73 6574 4174 7472 6962 7574 6500 0208 
00000e0: 646f 6375 6d65 6e74 0b61 7070 656e 6443 
00000f0: 6869 6c64 0001 044d 6174 6803 6578 7000 
0000100: 0306 7374 7269 6e67 0874 6f53 7472 696e 
0000110: 6700 0006 7374 7269 6e67 0361 6464 0001 
0000120: 0673 7472 696e 6708 746f 5374 7269 6e67 
0000130: 0004 0673 7472 696e 6708 746f 5374 7269 
0000140: 6e67 0000 0365 6e76 0a62 7974 6563 6875 
0000150: 6e6b 7302 0001 030d 0c05 0607 0505 0505 
0000160: 0505 0505 0506 1103 7f01 4101 0b7f 0141 
0000170: 0e0b 7f01 41c5 000b 0727 0306 5275 6e41 
0000180: 7070 000e 0a50 6f69 7373 6f6e 5044 4600 
0000190: 0f0d 4469 7370 6c61 7952 6573 756c 7400 
00001a0: 100a ba02 0c71 0104 7f41 db00 1004 2100 
00001b0: 41e0 0010 0421 0141 e600 1006 2102 41e8 
00001c0: 0010 0621 0320 0023 0010 0520 0223 0110 
00001d0: 0520 0323 0210 0520 0120 0210 0820 0120 
00001e0: 0310 0820 0141 ea00 41f0 0010 0720 0241 
00001f0: 8d01 4193 0110 0720 0341 af01 41b5 0110 
0000200: 0741 d301 1000 2301 1001 2302 1002 41f5 
0000210: 0110 0341 000f 0b39 0101 7c44 0000 0000 
0000220: 0000 0000 2001 a110 0921 0202 4003 4020 
0000230: 0041 014e 450d 0120 0220 0120 00b7 a3a2 
0000240: 2102 2000 4101 6b21 000c 000b 0b20 020f 
0000250: 0b4d 0101 7c20 0020 0110 0f21 0341 ae02 
0000260: 1004 41b5 0220 0010 0a10 0b41 db02 100b 
0000270: 2001 100c 100b 41de 0210 0b20 0310 0c10 
0000280: 0b41 e402 100b 1005 41e6 0210 0441 ed02 
0000290: 41f3 0220 0210 0d10 0b10 0741 000f 0b06 
00002a0: 0041 8d03 0f0b 0600 4199 030f 0b06 0041 
00002b0: ea03 0f0b 0600 41f5 030f 0b06 0041 8004 
00002c0: 0f0b 0600 4195 040f 0b06 0041 a104 0f0b 
00002d0: 0600 41c6 040f 0b06 0041 d404 0f0b 0b9d 
00002e0: 0620 0041 010b 0d48 656c 6c6f 2057 6f72 
00002f0: 6c64 2100 0041 0e0b 3754 6869 7320 6d65 
0000300: 7373 6167 6520 636f 6d65 7320 6672 6f6d 
0000310: 2061 2056 6973 7561 6c42 6173 6963 2e4e 
0000320: 4554 2061 7070 6c69 6361 7469 6f6e 2100 
0000330: 0041 c500 0b16 5765 6241 7373 656d 626c 
0000340: 7920 6974 2077 6f72 6b73 2100 0041 db00 
0000350: 0b05 7465 7874 0000 41e0 000b 066e 6f74 
0000360: 6573 0000 41e6 000b 0270 0000 41e8 000b 
0000370: 0270 0000 41ea 000b 0673 7479 6c65 0000 
0000380: 41f0 000b 1d62 6163 6b67 726f 756e 642d 
0000390: 636f 6c6f 723a 206c 6967 6874 6772 6579 
00003a0: 3b00 0041 8d01 0b06 7374 796c 6500 0041 
00003b0: 9301 0b1c 666f 6e74 2d73 697a 653a 2032 
00003c0: 656d 3b20 636f 6c6f 723a 2072 6564 3b00 
00003d0: 0041 af01 0b06 7374 796c 6500 0041 b501 
00003e0: 0b1e 666f 6e74 2d73 697a 653a 2035 656d 
00003f0: 3b20 636f 6c6f 723a 2067 7265 656e 3b00 
0000400: 0041 d301 0b22 4465 6275 6720 7465 7874 
0000410: 206d 6573 7361 6765 2064 6973 706c 6179 
0000420: 2062 656c 6f77 3a00 0041 f501 0b39 5472 
0000430: 7920 746f 2064 6973 706c 6179 2061 6e20 
0000440: 6572 726f 7220 6d65 7373 6167 6520 6f6e 
0000450: 206a 6176 6173 6372 6970 7420 636f 6e73 
0000460: 6f6c 652e 2e2e 0000 41ae 020b 0772 6573 
0000470: 756c 7400 0041 b502 0b26 5468 6520 6361 
0000480: 6c63 756c 6174 696f 6e20 7265 7375 6c74 
0000490: 206f 6620 506f 6973 736f 6e50 4446 2800 
00004a0: 0041 db02 0b03 2c20 0000 41de 020b 0629 
00004b0: 2069 7320 0000 41e4 020b 0221 0000 41e6 
00004c0: 020b 0772 6573 756c 7400 0041 ed02 0b06 
00004d0: 7374 796c 6500 0041 f302 0b1a 636f 6c6f 
00004e0: 723a 2067 7265 656e 3b20 666f 6e74 2d73 
00004f0: 697a 653a 2000 0041 8d03 0b0c 4865 6c6c 
0000500: 6f57 6f72 6c64 2100 0041 9903 0b51 4120 
0000510: 6865 6c6c 6f20 776f 726c 6420 6465 6d6f 
0000520: 2070 726f 6a65 6374 2066 6f72 2056 6973 
0000530: 7561 6c42 6173 6963 2e4e 4554 2057 6562 
0000540: 4173 7365 6d62 6c79 2063 6f6d 7069 6c65 
0000550: 7220 616e 6420 7275 6e74 696d 652e 0000 
0000560: 41ea 030b 0b78 6965 6775 6967 616e 6700 
0000570: 0041 f503 0b0b 4865 6c6c 6f57 6f72 6c64 
0000580: 0000 4180 040b 1643 6f70 7972 6967 6874 
0000590: 20c2 a920 4d49 5420 3230 3139 0000 4195 
00005a0: 040b 0c48 656c 6c6f 576f 726c 6421 0000 
00005b0: 41a1 040b 2538 3735 3033 3737 662d 6236 
00005c0: 6537 2d34 6662 352d 3838 3662 2d34 6333 
00005d0: 6661 3435 3165 6334 6300 0041 c604 0b0e 
00005e0: 3132 332e 3334 2e30 2e35 3436 3600 0041 
00005f0: d404 0b0a 312e 302e 3939 2e37 3800      
