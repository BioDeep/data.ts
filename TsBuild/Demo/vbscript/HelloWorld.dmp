0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 04                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 02                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 01                                        ; num results
0000015: 7f                                        ; i32
; type 2
0000016: 60                                        ; func
0000017: 03                                        ; num params
0000018: 7f                                        ; i32
0000019: 7f                                        ; i32
000001a: 7f                                        ; i32
000001b: 01                                        ; num results
000001c: 7f                                        ; i32
; type 3
000001d: 60                                        ; func
000001e: 00                                        ; num params
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
0000009: 17                                        ; FIXUP section size
; section "Import" (2)
0000021: 02                                        ; section code
0000022: 00                                        ; section size (guess)
0000023: 0a                                        ; num imports
; import header 0
0000024: 08                                        ; string length
0000025: 646f 6375 6d65 6e74                      document  ; import module name
000002d: 0e                                        ; string length
000002e: 6765 7445 6c65 6d65 6e74 4279 4964       getElementById  ; import field name
000003c: 00                                        ; import kind
000003d: 00                                        ; import signature index
; import header 1
000003e: 08                                        ; string length
000003f: 646f 6375 6d65 6e74                      document  ; import module name
0000047: 10                                        ; string length
0000048: 7772 6974 6545 6c65 6d65 6e74 5465 7874  writeElementText  ; import field name
0000058: 00                                        ; import kind
0000059: 01                                        ; import signature index
; import header 2
000005a: 08                                        ; string length
000005b: 646f 6375 6d65 6e74                      document  ; import module name
0000063: 0d                                        ; string length
0000064: 6372 6561 7465 456c 656d 656e 74         createElement  ; import field name
0000071: 00                                        ; import kind
0000072: 00                                        ; import signature index
; import header 3
0000073: 08                                        ; string length
0000074: 646f 6375 6d65 6e74                      document  ; import module name
000007c: 0c                                        ; string length
000007d: 7365 7441 7474 7269 6275 7465            setAttribute  ; import field name
0000089: 00                                        ; import kind
000008a: 02                                        ; import signature index
; import header 4
000008b: 08                                        ; string length
000008c: 646f 6375 6d65 6e74                      document  ; import module name
0000094: 0b                                        ; string length
0000095: 6170 7065 6e64 4368 696c 64              appendChild  ; import field name
00000a0: 00                                        ; import kind
00000a1: 01                                        ; import signature index
; import header 5
00000a2: 07                                        ; string length
00000a3: 636f 6e73 6f6c 65                        console  ; import module name
00000aa: 03                                        ; string length
00000ab: 6c6f 67                                  log  ; import field name
00000ae: 00                                        ; import kind
00000af: 00                                        ; import signature index
; import header 6
00000b0: 07                                        ; string length
00000b1: 636f 6e73 6f6c 65                        console  ; import module name
00000b8: 04                                        ; string length
00000b9: 7761 726e                                warn  ; import field name
00000bd: 00                                        ; import kind
00000be: 00                                        ; import signature index
; import header 7
00000bf: 07                                        ; string length
00000c0: 636f 6e73 6f6c 65                        console  ; import module name
00000c7: 04                                        ; string length
00000c8: 696e 666f                                info  ; import field name
00000cc: 00                                        ; import kind
00000cd: 00                                        ; import signature index
; import header 8
00000ce: 07                                        ; string length
00000cf: 636f 6e73 6f6c 65                        console  ; import module name
00000d6: 05                                        ; string length
00000d7: 6572 726f 72                             error  ; import field name
00000dc: 00                                        ; import kind
00000dd: 00                                        ; import signature index
; import header 9
00000de: 03                                        ; string length
00000df: 656e 76                                  env  ; import module name
00000e2: 0a                                        ; string length
00000e3: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
00000ed: 02                                        ; import kind
00000ee: 00                                        ; limits: flags
00000ef: 01                                        ; limits: initial
; move data: [23, f0) -> [24, f1)
0000022: cd01                                      ; FIXUP section size
; section "Function" (3)
00000f1: 03                                        ; section code
00000f2: 00                                        ; section size (guess)
00000f3: 01                                        ; num functions
00000f4: 03                                        ; function 0 signature index
00000f2: 02                                        ; FIXUP section size
; section "Global" (6)
00000f5: 06                                        ; section code
00000f6: 00                                        ; section size (guess)
00000f7: 03                                        ; num globals
00000f8: 7f                                        ; i32
00000f9: 01                                        ; global mutability
00000fa: 41                                        ; i32.const
00000fb: 01                                        ; i32 literal
00000fc: 0b                                        ; end
00000fd: 7f                                        ; i32
00000fe: 01                                        ; global mutability
00000ff: 41                                        ; i32.const
0000100: 0e                                        ; i32 literal
0000101: 0b                                        ; end
0000102: 7f                                        ; i32
0000103: 01                                        ; global mutability
0000104: 41                                        ; i32.const
0000105: c500                                      ; i32 literal
0000107: 0b                                        ; end
00000f6: 11                                        ; FIXUP section size
; section "Export" (7)
0000108: 07                                        ; section code
0000109: 00                                        ; section size (guess)
000010a: 01                                        ; num exports
000010b: 06                                        ; string length
000010c: 5275 6e41 7070                           RunApp  ; export name
0000112: 00                                        ; export kind
0000113: 09                                        ; export func index
0000109: 0a                                        ; FIXUP section size
; section "Code" (10)
0000114: 0a                                        ; section code
0000115: 00                                        ; section size (guess)
0000116: 01                                        ; num functions
; function body 0
0000117: 00                                        ; func body size (guess)
0000118: 01                                        ; local decl count
0000119: 04                                        ; local type count
000011a: 7f                                        ; i32
000011b: 41                                        ; i32.const
000011c: db00                                      ; i32 literal
000011e: 10                                        ; call
000011f: 00                                        ; function index
0000120: 21                                        ; local.set
0000121: 00                                        ; local index
0000122: 41                                        ; i32.const
0000123: e000                                      ; i32 literal
0000125: 10                                        ; call
0000126: 00                                        ; function index
0000127: 21                                        ; local.set
0000128: 01                                        ; local index
0000129: 41                                        ; i32.const
000012a: e600                                      ; i32 literal
000012c: 10                                        ; call
000012d: 02                                        ; function index
000012e: 21                                        ; local.set
000012f: 02                                        ; local index
0000130: 41                                        ; i32.const
0000131: e800                                      ; i32 literal
0000133: 10                                        ; call
0000134: 02                                        ; function index
0000135: 21                                        ; local.set
0000136: 03                                        ; local index
0000137: 20                                        ; local.get
0000138: 00                                        ; local index
0000139: 23                                        ; global.get
000013a: 00                                        ; global index
000013b: 10                                        ; call
000013c: 01                                        ; function index
000013d: 20                                        ; local.get
000013e: 02                                        ; local index
000013f: 23                                        ; global.get
0000140: 01                                        ; global index
0000141: 10                                        ; call
0000142: 01                                        ; function index
0000143: 20                                        ; local.get
0000144: 03                                        ; local index
0000145: 23                                        ; global.get
0000146: 02                                        ; global index
0000147: 10                                        ; call
0000148: 01                                        ; function index
0000149: 20                                        ; local.get
000014a: 01                                        ; local index
000014b: 20                                        ; local.get
000014c: 02                                        ; local index
000014d: 10                                        ; call
000014e: 04                                        ; function index
000014f: 20                                        ; local.get
0000150: 01                                        ; local index
0000151: 20                                        ; local.get
0000152: 03                                        ; local index
0000153: 10                                        ; call
0000154: 04                                        ; function index
0000155: 20                                        ; local.get
0000156: 01                                        ; local index
0000157: 41                                        ; i32.const
0000158: ea00                                      ; i32 literal
000015a: 41                                        ; i32.const
000015b: f000                                      ; i32 literal
000015d: 10                                        ; call
000015e: 03                                        ; function index
000015f: 20                                        ; local.get
0000160: 02                                        ; local index
0000161: 41                                        ; i32.const
0000162: 8d01                                      ; i32 literal
0000164: 41                                        ; i32.const
0000165: 9301                                      ; i32 literal
0000167: 10                                        ; call
0000168: 03                                        ; function index
0000169: 20                                        ; local.get
000016a: 03                                        ; local index
000016b: 41                                        ; i32.const
000016c: af01                                      ; i32 literal
000016e: 41                                        ; i32.const
000016f: b501                                      ; i32 literal
0000171: 10                                        ; call
0000172: 03                                        ; function index
0000173: 41                                        ; i32.const
0000174: d301                                      ; i32 literal
0000176: 10                                        ; call
0000177: 05                                        ; function index
0000178: 23                                        ; global.get
0000179: 01                                        ; global index
000017a: 10                                        ; call
000017b: 06                                        ; function index
000017c: 23                                        ; global.get
000017d: 02                                        ; global index
000017e: 10                                        ; call
000017f: 07                                        ; function index
0000180: 41                                        ; i32.const
0000181: 00                                        ; i32 literal
0000182: 0f                                        ; return
0000183: 0b                                        ; end
0000117: 6c                                        ; FIXUP func body size
0000115: 6e                                        ; FIXUP section size
; section "Data" (11)
0000184: 0b                                        ; section code
0000185: 00                                        ; section size (guess)
0000186: 0e                                        ; num data segments
; data segment header 0
0000187: 00                                      
0000188: 41                                        ; i32.const
0000189: 01                                        ; i32 literal
000018a: 0b                                        ; end
000018b: 0d                                        ; data segment size
; data segment data 0
000018c: 4865 6c6c 6f20 576f 726c 6421 00          ; data segment data
; data segment header 1
0000199: 00                                      
000019a: 41                                        ; i32.const
000019b: 0e                                        ; i32 literal
000019c: 0b                                        ; end
000019d: 37                                        ; data segment size
; data segment data 1
000019e: 5468 6973 206d 6573 7361 6765 2063 6f6d 
00001ae: 6573 2066 726f 6d20 6120 5669 7375 616c 
00001be: 4261 7369 632e 4e45 5420 6170 706c 6963 
00001ce: 6174 696f 6e21 00                         ; data segment data
; data segment header 2
00001d5: 00                                      
00001d6: 41                                        ; i32.const
00001d7: c500                                      ; i32 literal
00001d9: 0b                                        ; end
00001da: 16                                        ; data segment size
; data segment data 2
00001db: 5765 6241 7373 656d 626c 7920 6974 2077 
00001eb: 6f72 6b73 2100                            ; data segment data
; data segment header 3
00001f1: 00                                      
00001f2: 41                                        ; i32.const
00001f3: db00                                      ; i32 literal
00001f5: 0b                                        ; end
00001f6: 05                                        ; data segment size
; data segment data 3
00001f7: 7465 7874 00                              ; data segment data
; data segment header 4
00001fc: 00                                      
00001fd: 41                                        ; i32.const
00001fe: e000                                      ; i32 literal
0000200: 0b                                        ; end
0000201: 06                                        ; data segment size
; data segment data 4
0000202: 6e6f 7465 7300                            ; data segment data
; data segment header 5
0000208: 00                                      
0000209: 41                                        ; i32.const
000020a: e600                                      ; i32 literal
000020c: 0b                                        ; end
000020d: 02                                        ; data segment size
; data segment data 5
000020e: 7000                                      ; data segment data
; data segment header 6
0000210: 00                                      
0000211: 41                                        ; i32.const
0000212: e800                                      ; i32 literal
0000214: 0b                                        ; end
0000215: 02                                        ; data segment size
; data segment data 6
0000216: 7000                                      ; data segment data
; data segment header 7
0000218: 00                                      
0000219: 41                                        ; i32.const
000021a: ea00                                      ; i32 literal
000021c: 0b                                        ; end
000021d: 06                                        ; data segment size
; data segment data 7
000021e: 7374 796c 6500                            ; data segment data
; data segment header 8
0000224: 00                                      
0000225: 41                                        ; i32.const
0000226: f000                                      ; i32 literal
0000228: 0b                                        ; end
0000229: 1d                                        ; data segment size
; data segment data 8
000022a: 6261 636b 6772 6f75 6e64 2d63 6f6c 6f72 
000023a: 3a20 6c69 6768 7467 7265 793b 00          ; data segment data
; data segment header 9
0000247: 00                                      
0000248: 41                                        ; i32.const
0000249: 8d01                                      ; i32 literal
000024b: 0b                                        ; end
000024c: 06                                        ; data segment size
; data segment data 9
000024d: 7374 796c 6500                            ; data segment data
; data segment header 10
0000253: 00                                      
0000254: 41                                        ; i32.const
0000255: 9301                                      ; i32 literal
0000257: 0b                                        ; end
0000258: 1c                                        ; data segment size
; data segment data 10
0000259: 666f 6e74 2d73 697a 653a 2032 656d 3b20 
0000269: 636f 6c6f 723a 2072 6564 3b00             ; data segment data
; data segment header 11
0000275: 00                                      
0000276: 41                                        ; i32.const
0000277: af01                                      ; i32 literal
0000279: 0b                                        ; end
000027a: 06                                        ; data segment size
; data segment data 11
000027b: 7374 796c 6500                            ; data segment data
; data segment header 12
0000281: 00                                      
0000282: 41                                        ; i32.const
0000283: b501                                      ; i32 literal
0000285: 0b                                        ; end
0000286: 1e                                        ; data segment size
; data segment data 12
0000287: 666f 6e74 2d73 697a 653a 2035 656d 3b20 
0000297: 636f 6c6f 723a 2067 7265 656e 3b00        ; data segment data
; data segment header 13
00002a5: 00                                      
00002a6: 41                                        ; i32.const
00002a7: d301                                      ; i32 literal
00002a9: 0b                                        ; end
00002aa: 22                                        ; data segment size
; data segment data 13
00002ab: 4465 6275 6720 7465 7874 206d 6573 7361 
00002bb: 6765 2064 6973 706c 6179 2062 656c 6f77 
00002cb: 3a00                                      ; data segment data
; move data: [186, 2cd) -> [187, 2ce)
0000185: c702                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0117 0460 017f 017f 
0000010: 6002 7f7f 017f 6003 7f7f 7f01 7f60 0001 
0000020: 7f02 cd01 0a08 646f 6375 6d65 6e74 0e67 
0000030: 6574 456c 656d 656e 7442 7949 6400 0008 
0000040: 646f 6375 6d65 6e74 1077 7269 7465 456c 
0000050: 656d 656e 7454 6578 7400 0108 646f 6375 
0000060: 6d65 6e74 0d63 7265 6174 6545 6c65 6d65 
0000070: 6e74 0000 0864 6f63 756d 656e 740c 7365 
0000080: 7441 7474 7269 6275 7465 0002 0864 6f63 
0000090: 756d 656e 740b 6170 7065 6e64 4368 696c 
00000a0: 6400 0107 636f 6e73 6f6c 6503 6c6f 6700 
00000b0: 0007 636f 6e73 6f6c 6504 7761 726e 0000 
00000c0: 0763 6f6e 736f 6c65 0469 6e66 6f00 0007 
00000d0: 636f 6e73 6f6c 6505 6572 726f 7200 0003 
00000e0: 656e 760a 6279 7465 6368 756e 6b73 0200 
00000f0: 0103 0201 0306 1103 7f01 4101 0b7f 0141 
0000100: 0e0b 7f01 41c5 000b 070a 0106 5275 6e41 
0000110: 7070 0009 0a6e 016c 0104 7f41 db00 1000 
0000120: 2100 41e0 0010 0021 0141 e600 1002 2102 
0000130: 41e8 0010 0221 0320 0023 0010 0120 0223 
0000140: 0110 0120 0323 0210 0120 0120 0210 0420 
0000150: 0120 0310 0420 0141 ea00 41f0 0010 0320 
0000160: 0241 8d01 4193 0110 0320 0341 af01 41b5 
0000170: 0110 0341 d301 1005 2301 1006 2302 1007 
0000180: 4100 0f0b 0bc7 020e 0041 010b 0d48 656c 
0000190: 6c6f 2057 6f72 6c64 2100 0041 0e0b 3754 
00001a0: 6869 7320 6d65 7373 6167 6520 636f 6d65 
00001b0: 7320 6672 6f6d 2061 2056 6973 7561 6c42 
00001c0: 6173 6963 2e4e 4554 2061 7070 6c69 6361 
00001d0: 7469 6f6e 2100 0041 c500 0b16 5765 6241 
00001e0: 7373 656d 626c 7920 6974 2077 6f72 6b73 
00001f0: 2100 0041 db00 0b05 7465 7874 0000 41e0 
0000200: 000b 066e 6f74 6573 0000 41e6 000b 0270 
0000210: 0000 41e8 000b 0270 0000 41ea 000b 0673 
0000220: 7479 6c65 0000 41f0 000b 1d62 6163 6b67 
0000230: 726f 756e 642d 636f 6c6f 723a 206c 6967 
0000240: 6874 6772 6579 3b00 0041 8d01 0b06 7374 
0000250: 796c 6500 0041 9301 0b1c 666f 6e74 2d73 
0000260: 697a 653a 2032 656d 3b20 636f 6c6f 723a 
0000270: 2072 6564 3b00 0041 af01 0b06 7374 796c 
0000280: 6500 0041 b501 0b1e 666f 6e74 2d73 697a 
0000290: 653a 2035 656d 3b20 636f 6c6f 723a 2067 
00002a0: 7265 656e 3b00 0041 d301 0b22 4465 6275 
00002b0: 6720 7465 7874 206d 6573 7361 6765 2064 
00002c0: 6973 706c 6179 2062 656c 6f77 3a00      
