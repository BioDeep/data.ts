0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 05                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 01                                        ; num results
000000f: 7c                                        ; f64
; type 1
0000010: 60                                        ; func
0000011: 00                                        ; num params
0000012: 01                                        ; num results
0000013: 7c                                        ; f64
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 01                                        ; num params
000001c: 7f                                        ; i32
000001d: 01                                        ; num results
000001e: 7f                                        ; i32
; type 4
000001f: 60                                        ; func
0000020: 00                                        ; num params
0000021: 01                                        ; num results
0000022: 7d                                        ; f32
0000009: 19                                        ; FIXUP section size
; section "Import" (2)
0000023: 02                                        ; section code
0000024: 00                                        ; section size (guess)
0000025: 02                                        ; num imports
; import header 0
0000026: 04                                        ; string length
0000027: 4d61 7468                                Math  ; import module name
000002b: 03                                        ; string length
000002c: 6578 70                                  exp  ; import field name
000002f: 00                                        ; import kind
0000030: 00                                        ; import signature index
; import header 1
0000031: 04                                        ; string length
0000032: 4d61 7468                                Math  ; import module name
0000036: 06                                        ; string length
0000037: 7261 6e64 6f6d                           random  ; import field name
000003d: 00                                        ; import kind
000003e: 01                                        ; import signature index
0000024: 1a                                        ; FIXUP section size
; section "Function" (3)
000003f: 03                                        ; section code
0000040: 00                                        ; section size (guess)
0000041: 04                                        ; num functions
0000042: 02                                        ; function 0 signature index
0000043: 03                                        ; function 1 signature index
0000044: 04                                        ; function 2 signature index
0000045: 01                                        ; function 3 signature index
0000040: 05                                        ; FIXUP section size
; section "Global" (6)
0000046: 06                                        ; section code
0000047: 00                                        ; section size (guess)
0000048: 01                                        ; num globals
0000049: 7f                                        ; i32
000004a: 01                                        ; global mutability
000004b: 41                                        ; i32.const
000004c: de07                                      ; i32 literal
000004e: 0b                                        ; end
0000047: 07                                        ; FIXUP section size
; section "Export" (7)
000004f: 07                                        ; section code
0000050: 00                                        ; section size (guess)
0000051: 04                                        ; num exports
0000052: 0a                                        ; string length
0000053: 506f 6973 736f 6e50 4446                 PoissonPDF  ; export name
000005d: 00                                        ; export kind
000005e: 02                                        ; export func index
000005f: 05                                        ; string length
0000060: 4164 6431 30                             Add10  ; export name
0000065: 00                                        ; export kind
0000066: 03                                        ; export func index
0000067: 09                                        ; string length
0000068: 4765 7447 6c6f 6261 6c                   GetGlobal  ; export name
0000071: 00                                        ; export kind
0000072: 04                                        ; export func index
0000073: 08                                        ; string length
0000074: 466c 6970 436f 696e                      FlipCoin  ; export name
000007c: 00                                        ; export kind
000007d: 05                                        ; export func index
0000050: 2d                                        ; FIXUP section size
; section "Code" (10)
000007e: 0a                                        ; section code
000007f: 00                                        ; section size (guess)
0000080: 04                                        ; num functions
; function body 0
0000081: 00                                        ; func body size (guess)
0000082: 01                                        ; local decl count
0000083: 01                                        ; local type count
0000084: 7c                                        ; f64
0000085: 44                                        ; f64.const
0000086: 0000 0000 0000 0000                       ; f64 literal
000008e: 20                                        ; local.get
000008f: 01                                        ; local index
0000090: a1                                        ; f64.sub
0000091: 10                                        ; call
0000092: 00                                        ; function index
0000093: 21                                        ; local.set
0000094: 02                                        ; local index
0000095: 02                                        ; block
0000096: 40                                        ; void
0000097: 03                                        ; loop
0000098: 40                                        ; void
0000099: 20                                        ; local.get
000009a: 00                                        ; local index
000009b: 41                                        ; i32.const
000009c: 01                                        ; i32 literal
000009d: 4e                                        ; i32.ge_s
000009e: 45                                        ; i32.eqz
000009f: 0d                                        ; br_if
00000a0: 01                                        ; break depth
00000a1: 20                                        ; local.get
00000a2: 02                                        ; local index
00000a3: 20                                        ; local.get
00000a4: 01                                        ; local index
00000a5: 20                                        ; local.get
00000a6: 00                                        ; local index
00000a7: b7                                        ; f64.convert_i32_s
00000a8: a3                                        ; f64.div
00000a9: a2                                        ; f64.mul
00000aa: 21                                        ; local.set
00000ab: 02                                        ; local index
00000ac: 20                                        ; local.get
00000ad: 00                                        ; local index
00000ae: 41                                        ; i32.const
00000af: 01                                        ; i32 literal
00000b0: 6b                                        ; i32.sub
00000b1: 21                                        ; local.set
00000b2: 00                                        ; local index
00000b3: 0c                                        ; br
00000b4: 00                                        ; break depth
00000b5: 0b                                        ; end
00000b6: 0b                                        ; end
00000b7: 20                                        ; local.get
00000b8: 02                                        ; local index
00000b9: 0f                                        ; return
00000ba: 0b                                        ; end
0000081: 39                                        ; FIXUP func body size
; function body 1
00000bb: 00                                        ; func body size (guess)
00000bc: 01                                        ; local decl count
00000bd: 01                                        ; local type count
00000be: 7f                                        ; i32
00000bf: 41                                        ; i32.const
00000c0: 00                                        ; i32 literal
00000c1: 21                                        ; local.set
00000c2: 01                                        ; local index
00000c3: 02                                        ; block
00000c4: 40                                        ; void
00000c5: 03                                        ; loop
00000c6: 40                                        ; void
00000c7: 20                                        ; local.get
00000c8: 01                                        ; local index
00000c9: 41                                        ; i32.const
00000ca: 09                                        ; i32 literal
00000cb: 4a                                        ; i32.gt_s
00000cc: 0d                                        ; br_if
00000cd: 01                                        ; break depth
00000ce: 20                                        ; local.get
00000cf: 01                                        ; local index
00000d0: 41                                        ; i32.const
00000d1: 01                                        ; i32 literal
00000d2: 6a                                        ; i32.add
00000d3: 21                                        ; local.set
00000d4: 01                                        ; local index
00000d5: 20                                        ; local.get
00000d6: 00                                        ; local index
00000d7: 41                                        ; i32.const
00000d8: 01                                        ; i32 literal
00000d9: 6a                                        ; i32.add
00000da: 21                                        ; local.set
00000db: 00                                        ; local index
00000dc: 0c                                        ; br
00000dd: 00                                        ; break depth
00000de: 0b                                        ; end
00000df: 0b                                        ; end
00000e0: 23                                        ; global.get
00000e1: 00                                        ; global index
00000e2: 41                                        ; i32.const
00000e3: 0a                                        ; i32 literal
00000e4: 6a                                        ; i32.add
00000e5: 24                                        ; global.set
00000e6: 00                                        ; global index
00000e7: 20                                        ; local.get
00000e8: 00                                        ; local index
00000e9: 23                                        ; global.get
00000ea: 00                                        ; global index
00000eb: 41                                        ; i32.const
00000ec: 02                                        ; i32 literal
00000ed: 6c                                        ; i32.mul
00000ee: 6a                                        ; i32.add
00000ef: 0f                                        ; return
00000f0: 0b                                        ; end
00000bb: 35                                        ; FIXUP func body size
; function body 2
00000f1: 00                                        ; func body size (guess)
00000f2: 00                                        ; local decl count
00000f3: 23                                        ; global.get
00000f4: 00                                        ; global index
00000f5: b2                                        ; f32.convert_i32_s
00000f6: 0f                                        ; return
00000f7: 0b                                        ; end
00000f1: 06                                        ; FIXUP func body size
; function body 3
00000f8: 00                                        ; func body size (guess)
00000f9: 01                                        ; local decl count
00000fa: 01                                        ; local type count
00000fb: 7c                                        ; f64
00000fc: 10                                        ; call
00000fd: 01                                        ; function index
00000fe: 21                                        ; local.set
00000ff: 00                                        ; local index
0000100: 20                                        ; local.get
0000101: 00                                        ; local index
0000102: 44                                        ; f64.const
0000103: 0000 0000 0000 e03f                       ; f64 literal
000010b: 66                                        ; f64.ge
000010c: 04                                        ; if
000010d: 40                                        ; void
000010e: 41                                        ; i32.const
000010f: 01                                        ; i32 literal
0000110: b7                                        ; f64.convert_i32_s
0000111: 20                                        ; local.get
0000112: 00                                        ; local index
0000113: a0                                        ; f64.add
0000114: 0f                                        ; return
0000115: 05                                        ; else
0000116: 41                                        ; i32.const
0000117: 00                                        ; i32 literal
0000118: 41                                        ; i32.const
0000119: 01                                        ; i32 literal
000011a: 6b                                        ; i32.sub
000011b: b7                                        ; f64.convert_i32_s
000011c: 20                                        ; local.get
000011d: 00                                        ; local index
000011e: a1                                        ; f64.sub
000011f: 0f                                        ; return
0000120: 0b                                        ; end
0000121: 44                                        ; f64.const
0000122: 0000 0000 0000 0000                       ; f64 literal
000012a: 0f                                        ; return
000012b: 0b                                        ; end
00000f8: 33                                        ; FIXUP func body size
; move data: [80, 12c) -> [81, 12d)
000007f: ac01                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0119 0560 017c 017c 
0000010: 6000 017c 6002 7f7c 017c 6001 7f01 7f60 
0000020: 0001 7d02 1a02 044d 6174 6803 6578 7000 
0000030: 0004 4d61 7468 0672 616e 646f 6d00 0103 
0000040: 0504 0203 0401 0607 017f 0141 de07 0b07 
0000050: 2d04 0a50 6f69 7373 6f6e 5044 4600 0205 
0000060: 4164 6431 3000 0309 4765 7447 6c6f 6261 
0000070: 6c00 0408 466c 6970 436f 696e 0005 0aac 
0000080: 0104 3901 017c 4400 0000 0000 0000 0020 
0000090: 01a1 1000 2102 0240 0340 2000 4101 4e45 
00000a0: 0d01 2002 2001 2000 b7a3 a221 0220 0041 
00000b0: 016b 2100 0c00 0b0b 2002 0f0b 3501 017f 
00000c0: 4100 2101 0240 0340 2001 4109 4a0d 0120 
00000d0: 0141 016a 2101 2000 4101 6a21 000c 000b 
00000e0: 0b23 0041 0a6a 2400 2000 2300 4102 6c6a 
00000f0: 0f0b 0600 2300 b20f 0b33 0101 7c10 0121 
0000100: 0020 0044 0000 0000 0000 e03f 6604 4041 
0000110: 01b7 2000 a00f 0541 0041 016b b720 00a1 
0000120: 0f0b 4400 0000 0000 0000 000f 0b        
