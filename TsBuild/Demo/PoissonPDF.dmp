0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 04                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7c                                        ; f64
000000e: 01                                        ; num results
000000f: 7c                                        ; f64
; type 1
0000010: 60                                        ; func
0000011: 00                                        ; num params
0000012: 01                                        ; num results
0000013: 7c                                        ; f64
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7c                                        ; f64
0000018: 01                                        ; num results
0000019: 7c                                        ; f64
; type 3
000001a: 60                                        ; func
000001b: 01                                        ; num params
000001c: 7f                                        ; i32
000001d: 01                                        ; num results
000001e: 7f                                        ; i32
0000009: 15                                        ; FIXUP section size
; section "Import" (2)
000001f: 02                                        ; section code
0000020: 00                                        ; section size (guess)
0000021: 02                                        ; num imports
; import header 0
0000022: 04                                        ; string length
0000023: 4d61 7468                                Math  ; import module name
0000027: 03                                        ; string length
0000028: 6578 70                                  exp  ; import field name
000002b: 00                                        ; import kind
000002c: 00                                        ; import signature index
; import header 1
000002d: 04                                        ; string length
000002e: 4d61 7468                                Math  ; import module name
0000032: 06                                        ; string length
0000033: 7261 6e64 6f6d                           random  ; import field name
0000039: 00                                        ; import kind
000003a: 01                                        ; import signature index
0000020: 1a                                        ; FIXUP section size
; section "Function" (3)
000003b: 03                                        ; section code
000003c: 00                                        ; section size (guess)
000003d: 03                                        ; num functions
000003e: 02                                        ; function 0 signature index
000003f: 03                                        ; function 1 signature index
0000040: 01                                        ; function 2 signature index
000003c: 04                                        ; FIXUP section size
; section "Global" (6)
0000041: 06                                        ; section code
0000042: 00                                        ; section size (guess)
0000043: 01                                        ; num globals
0000044: 7f                                        ; i32
0000045: 01                                        ; global mutability
0000046: 41                                        ; i32.const
0000047: 00                                        ; i32 literal
0000048: 0b                                        ; end
0000042: 06                                        ; FIXUP section size
; section "Export" (7)
0000049: 07                                        ; section code
000004a: 00                                        ; section size (guess)
000004b: 03                                        ; num exports
000004c: 0a                                        ; string length
000004d: 506f 6973 736f 6e50 4446                 PoissonPDF  ; export name
0000057: 00                                        ; export kind
0000058: 02                                        ; export func index
0000059: 05                                        ; string length
000005a: 4164 6431 30                             Add10  ; export name
000005f: 00                                        ; export kind
0000060: 03                                        ; export func index
0000061: 08                                        ; string length
0000062: 466c 6970 436f 696e                      FlipCoin  ; export name
000006a: 00                                        ; export kind
000006b: 04                                        ; export func index
000004a: 21                                        ; FIXUP section size
; section "Code" (10)
000006c: 0a                                        ; section code
000006d: 00                                        ; section size (guess)
000006e: 03                                        ; num functions
; function body 0
000006f: 00                                        ; func body size (guess)
0000070: 01                                        ; local decl count
0000071: 01                                        ; local type count
0000072: 7c                                        ; f64
0000073: 44                                        ; f64.const
0000074: 0000 0000 0000 0000                       ; f64 literal
000007c: 20                                        ; local.get
000007d: 01                                        ; local index
000007e: a1                                        ; f64.sub
000007f: 10                                        ; call
0000080: 00                                        ; function index
0000081: 21                                        ; local.set
0000082: 02                                        ; local index
0000083: 02                                        ; block
0000084: 40                                        ; void
0000085: 03                                        ; loop
0000086: 40                                        ; void
0000087: 20                                        ; local.get
0000088: 00                                        ; local index
0000089: 41                                        ; i32.const
000008a: 01                                        ; i32 literal
000008b: 4e                                        ; i32.ge_s
000008c: 45                                        ; i32.eqz
000008d: 0d                                        ; br_if
000008e: 01                                        ; break depth
000008f: 20                                        ; local.get
0000090: 02                                        ; local index
0000091: 20                                        ; local.get
0000092: 01                                        ; local index
0000093: 20                                        ; local.get
0000094: 00                                        ; local index
0000095: b7                                        ; f64.convert_i32_s
0000096: a3                                        ; f64.div
0000097: a2                                        ; f64.mul
0000098: 21                                        ; local.set
0000099: 02                                        ; local index
000009a: 20                                        ; local.get
000009b: 00                                        ; local index
000009c: 41                                        ; i32.const
000009d: 01                                        ; i32 literal
000009e: 6b                                        ; i32.sub
000009f: 21                                        ; local.set
00000a0: 00                                        ; local index
00000a1: 0c                                        ; br
00000a2: 00                                        ; break depth
00000a3: 0b                                        ; end
00000a4: 0b                                        ; end
00000a5: 20                                        ; local.get
00000a6: 02                                        ; local index
00000a7: 0f                                        ; return
00000a8: 0b                                        ; end
000006f: 39                                        ; FIXUP func body size
; function body 1
00000a9: 00                                        ; func body size (guess)
00000aa: 01                                        ; local decl count
00000ab: 01                                        ; local type count
00000ac: 7f                                        ; i32
00000ad: 41                                        ; i32.const
00000ae: 00                                        ; i32 literal
00000af: 21                                        ; local.set
00000b0: 01                                        ; local index
00000b1: 02                                        ; block
00000b2: 40                                        ; void
00000b3: 03                                        ; loop
00000b4: 40                                        ; void
00000b5: 20                                        ; local.get
00000b6: 01                                        ; local index
00000b7: 41                                        ; i32.const
00000b8: 09                                        ; i32 literal
00000b9: 4a                                        ; i32.gt_s
00000ba: 0d                                        ; br_if
00000bb: 01                                        ; break depth
00000bc: 20                                        ; local.get
00000bd: 01                                        ; local index
00000be: 41                                        ; i32.const
00000bf: 01                                        ; i32 literal
00000c0: 6a                                        ; i32.add
00000c1: 21                                        ; local.set
00000c2: 01                                        ; local index
00000c3: 20                                        ; local.get
00000c4: 00                                        ; local index
00000c5: 41                                        ; i32.const
00000c6: 01                                        ; i32 literal
00000c7: 6a                                        ; i32.add
00000c8: 21                                        ; local.set
00000c9: 00                                        ; local index
00000ca: 0c                                        ; br
00000cb: 00                                        ; break depth
00000cc: 0b                                        ; end
00000cd: 0b                                        ; end
00000ce: 23                                        ; global.get
00000cf: 00                                        ; global index
00000d0: 41                                        ; i32.const
00000d1: 0a                                        ; i32 literal
00000d2: 6a                                        ; i32.add
00000d3: 24                                        ; global.set
00000d4: 00                                        ; global index
00000d5: 20                                        ; local.get
00000d6: 00                                        ; local index
00000d7: 23                                        ; global.get
00000d8: 00                                        ; global index
00000d9: 41                                        ; i32.const
00000da: 02                                        ; i32 literal
00000db: 6c                                        ; i32.mul
00000dc: 6a                                        ; i32.add
00000dd: 0f                                        ; return
00000de: 0b                                        ; end
00000a9: 35                                        ; FIXUP func body size
; function body 2
00000df: 00                                        ; func body size (guess)
00000e0: 01                                        ; local decl count
00000e1: 01                                        ; local type count
00000e2: 7c                                        ; f64
00000e3: 10                                        ; call
00000e4: 01                                        ; function index
00000e5: 21                                        ; local.set
00000e6: 00                                        ; local index
00000e7: 20                                        ; local.get
00000e8: 00                                        ; local index
00000e9: 44                                        ; f64.const
00000ea: 0000 0000 0000 e03f                       ; f64 literal
00000f2: 66                                        ; f64.ge
00000f3: 04                                        ; if
00000f4: 40                                        ; void
00000f5: 41                                        ; i32.const
00000f6: 01                                        ; i32 literal
00000f7: b7                                        ; f64.convert_i32_s
00000f8: 20                                        ; local.get
00000f9: 00                                        ; local index
00000fa: a0                                        ; f64.add
00000fb: 0f                                        ; return
00000fc: 05                                        ; else
00000fd: 41                                        ; i32.const
00000fe: 00                                        ; i32 literal
00000ff: 41                                        ; i32.const
0000100: 01                                        ; i32 literal
0000101: 6b                                        ; i32.sub
0000102: b7                                        ; f64.convert_i32_s
0000103: 20                                        ; local.get
0000104: 00                                        ; local index
0000105: a1                                        ; f64.sub
0000106: 0f                                        ; return
0000107: 0b                                        ; end
0000108: 44                                        ; f64.const
0000109: 0000 0000 0000 0000                       ; f64 literal
0000111: 0f                                        ; return
0000112: 0b                                        ; end
00000df: 33                                        ; FIXUP func body size
; move data: [6e, 113) -> [6f, 114)
000006d: a501                                      ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0115 0460 017c 017c 
0000010: 6000 017c 6002 7f7c 017c 6001 7f01 7f02 
0000020: 1a02 044d 6174 6803 6578 7000 0004 4d61 
0000030: 7468 0672 616e 646f 6d00 0103 0403 0203 
0000040: 0106 0601 7f01 4100 0b07 2103 0a50 6f69 
0000050: 7373 6f6e 5044 4600 0205 4164 6431 3000 
0000060: 0308 466c 6970 436f 696e 0004 0aa5 0103 
0000070: 3901 017c 4400 0000 0000 0000 0020 01a1 
0000080: 1000 2102 0240 0340 2000 4101 4e45 0d01 
0000090: 2002 2001 2000 b7a3 a221 0220 0041 016b 
00000a0: 2100 0c00 0b0b 2002 0f0b 3501 017f 4100 
00000b0: 2101 0240 0340 2001 4109 4a0d 0120 0141 
00000c0: 016a 2101 2000 4101 6a21 000c 000b 0b23 
00000d0: 0041 0a6a 2400 2000 2300 4102 6c6a 0f0b 
00000e0: 3301 017c 1001 2100 2000 4400 0000 0000 
00000f0: 00e0 3f66 0440 4101 b720 00a0 0f05 4100 
0000100: 4101 6bb7 2000 a10f 0b44 0000 0000 0000 
0000110: 0000 0f0b                               
