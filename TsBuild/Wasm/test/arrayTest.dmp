0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 03                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 00                                        ; num params
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7f                                        ; i32
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
0000009: 10                                        ; FIXUP section size
; section "Import" (2)
000001a: 02                                        ; section code
000001b: 00                                        ; section size (guess)
000001c: 06                                        ; num imports
; import header 0
000001d: 07                                        ; string length
000001e: 636f 6e73 6f6c 65                        console  ; import module name
0000025: 03                                        ; string length
0000026: 6c6f 67                                  log  ; import field name
0000029: 00                                        ; import kind
000002a: 00                                        ; import signature index
; import header 1
000002b: 07                                        ; string length
000002c: 636f 6e73 6f6c 65                        console  ; import module name
0000033: 03                                        ; string length
0000034: 6c6f 67                                  log  ; import field name
0000037: 00                                        ; import kind
0000038: 00                                        ; import signature index
; import header 2
0000039: 05                                        ; string length
000003a: 6172 7261 79                             array  ; import module name
000003f: 03                                        ; string length
0000040: 6e65 77                                  new  ; import field name
0000043: 00                                        ; import kind
0000044: 01                                        ; import signature index
; import header 3
0000045: 05                                        ; string length
0000046: 6172 7261 79                             array  ; import module name
000004b: 04                                        ; string length
000004c: 7075 7368                                push  ; import field name
0000050: 00                                        ; import kind
0000051: 02                                        ; import signature index
; import header 4
0000052: 05                                        ; string length
0000053: 6172 7261 79                             array  ; import module name
0000058: 03                                        ; string length
0000059: 6765 74                                  get  ; import field name
000005c: 00                                        ; import kind
000005d: 02                                        ; import signature index
; import header 5
000005e: 03                                        ; string length
000005f: 656e 76                                  env  ; import module name
0000062: 0a                                        ; string length
0000063: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000006d: 02                                        ; import kind
000006e: 00                                        ; limits: flags
000006f: 01                                        ; limits: initial
000001b: 54                                        ; FIXUP section size
; section "Function" (3)
0000070: 03                                        ; section code
0000071: 00                                        ; section size (guess)
0000072: 01                                        ; num functions
0000073: 01                                        ; function 0 signature index
0000071: 02                                        ; FIXUP section size
; section "Export" (7)
0000074: 07                                        ; section code
0000075: 00                                        ; section size (guess)
0000076: 01                                        ; num exports
0000077: 0b                                        ; string length
0000078: 6372 6561 7465 4172 7261 79              createArray  ; export name
0000083: 00                                        ; export kind
0000084: 05                                        ; export func index
0000075: 0f                                        ; FIXUP section size
; section "Code" (10)
0000085: 0a                                        ; section code
0000086: 00                                        ; section size (guess)
0000087: 01                                        ; num functions
; function body 0
0000088: 00                                        ; func body size (guess)
0000089: 01                                        ; local decl count
000008a: 02                                        ; local type count
000008b: 7f                                        ; i32
000008c: 10                                        ; call
000008d: 02                                        ; function index
000008e: 41                                        ; i32.const
000008f: 01                                        ; i32 literal
0000090: 10                                        ; call
0000091: 03                                        ; function index
0000092: 41                                        ; i32.const
0000093: 08                                        ; i32 literal
0000094: 10                                        ; call
0000095: 03                                        ; function index
0000096: 41                                        ; i32.const
0000097: 0e                                        ; i32 literal
0000098: 10                                        ; call
0000099: 03                                        ; function index
000009a: 41                                        ; i32.const
000009b: 14                                        ; i32 literal
000009c: 10                                        ; call
000009d: 03                                        ; function index
000009e: 41                                        ; i32.const
000009f: 1b                                        ; i32 literal
00000a0: 10                                        ; call
00000a1: 03                                        ; function index
00000a2: 21                                        ; local.set
00000a3: 00                                        ; local index
00000a4: 20                                        ; local.get
00000a5: 00                                        ; local index
00000a6: 41                                        ; i32.const
00000a7: 00                                        ; i32 literal
00000a8: 10                                        ; call
00000a9: 04                                        ; function index
00000aa: 21                                        ; local.set
00000ab: 01                                        ; local index
00000ac: 20                                        ; local.get
00000ad: 00                                        ; local index
00000ae: 10                                        ; call
00000af: 00                                        ; function index
00000b0: 20                                        ; local.get
00000b1: 00                                        ; local index
00000b2: 41                                        ; i32.const
00000b3: 03                                        ; i32 literal
00000b4: 10                                        ; call
00000b5: 04                                        ; function index
00000b6: 10                                        ; call
00000b7: 01                                        ; function index
00000b8: 41                                        ; i32.const
00000b9: 00                                        ; i32 literal
00000ba: 0f                                        ; return
00000bb: 0b                                        ; end
0000088: 33                                        ; FIXUP func body size
0000086: 35                                        ; FIXUP section size
; section "Data" (11)
00000bc: 0b                                        ; section code
00000bd: 00                                        ; section size (guess)
00000be: 05                                        ; num data segments
; data segment header 0
00000bf: 00                                      
00000c0: 41                                        ; i32.const
00000c1: 01                                        ; i32 literal
00000c2: 0b                                        ; end
00000c3: 07                                        ; data segment size
; data segment data 0
00000c4: 3333 3333 3333 00                         ; data segment data
; data segment header 1
00000cb: 00                                      
00000cc: 41                                        ; i32.const
00000cd: 08                                        ; i32 literal
00000ce: 0b                                        ; end
00000cf: 06                                        ; data segment size
; data segment data 1
00000d0: 4141 4141 4100                            ; data segment data
; data segment header 2
00000d6: 00                                      
00000d7: 41                                        ; i32.const
00000d8: 0e                                        ; i32 literal
00000d9: 0b                                        ; end
00000da: 06                                        ; data segment size
; data segment data 2
00000db: 5858 5858 5800                            ; data segment data
; data segment header 3
00000e1: 00                                      
00000e2: 41                                        ; i32.const
00000e3: 14                                        ; i32 literal
00000e4: 0b                                        ; end
00000e5: 07                                        ; data segment size
; data segment data 3
00000e6: 3533 3435 3335 00                         ; data segment data
; data segment header 4
00000ed: 00                                      
00000ee: 41                                        ; i32.const
00000ef: 1b                                        ; i32 literal
00000f0: 0b                                        ; end
00000f1: 0e                                        ; data segment size
; data segment data 4
00000f2: 6173 6461 6a6b 6673 6468 6a6b 6600        ; data segment data
00000bd: 42                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0110 0360 017f 017f 
0000010: 6000 017f 6002 7f7f 017f 0254 0607 636f 
0000020: 6e73 6f6c 6503 6c6f 6700 0007 636f 6e73 
0000030: 6f6c 6503 6c6f 6700 0005 6172 7261 7903 
0000040: 6e65 7700 0105 6172 7261 7904 7075 7368 
0000050: 0002 0561 7272 6179 0367 6574 0002 0365 
0000060: 6e76 0a62 7974 6563 6875 6e6b 7302 0001 
0000070: 0302 0101 070f 010b 6372 6561 7465 4172 
0000080: 7261 7900 050a 3501 3301 027f 1002 4101 
0000090: 1003 4108 1003 410e 1003 4114 1003 411b 
00000a0: 1003 2100 2000 4100 1004 2101 2000 1000 
00000b0: 2000 4103 1004 1001 4100 0f0b 0b42 0500 
00000c0: 4101 0b07 3333 3333 3333 0000 4108 0b06 
00000d0: 4141 4141 4100 0041 0e0b 0658 5858 5858 
00000e0: 0000 4114 0b07 3533 3435 3335 0000 411b 
00000f0: 0b0e 6173 6461 6a6b 6673 6468 6a6b 6600 
