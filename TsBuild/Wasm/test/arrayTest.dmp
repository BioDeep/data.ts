0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 04                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 00                                        ; num params
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7f                                        ; i32
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 03                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 7f                                        ; i32
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
0000009: 17                                        ; FIXUP section size
; section "Import" (2)
0000021: 02                                        ; section code
0000022: 00                                        ; section size (guess)
0000023: 08                                        ; num imports
; import header 0
0000024: 07                                        ; string length
0000025: 636f 6e73 6f6c 65                        console  ; import module name
000002c: 03                                        ; string length
000002d: 6c6f 67                                  log  ; import field name
0000030: 00                                        ; import kind
0000031: 00                                        ; import signature index
; import header 1
0000032: 07                                        ; string length
0000033: 636f 6e73 6f6c 65                        console  ; import module name
000003a: 03                                        ; string length
000003b: 6c6f 67                                  log  ; import field name
000003e: 00                                        ; import kind
000003f: 00                                        ; import signature index
; import header 2
0000040: 05                                        ; string length
0000041: 6172 7261 79                             array  ; import module name
0000046: 03                                        ; string length
0000047: 6e65 77                                  new  ; import field name
000004a: 00                                        ; import kind
000004b: 01                                        ; import signature index
; import header 3
000004c: 05                                        ; string length
000004d: 6172 7261 79                             array  ; import module name
0000052: 04                                        ; string length
0000053: 7075 7368                                push  ; import field name
0000057: 00                                        ; import kind
0000058: 02                                        ; import signature index
; import header 4
0000059: 05                                        ; string length
000005a: 6172 7261 79                             array  ; import module name
000005f: 03                                        ; string length
0000060: 6765 74                                  get  ; import field name
0000063: 00                                        ; import kind
0000064: 02                                        ; import signature index
; import header 5
0000065: 05                                        ; string length
0000066: 6172 7261 79                             array  ; import module name
000006b: 06                                        ; string length
000006c: 6c65 6e67 7468                           length  ; import field name
0000072: 00                                        ; import kind
0000073: 00                                        ; import signature index
; import header 6
0000074: 05                                        ; string length
0000075: 6172 7261 79                             array  ; import module name
000007a: 03                                        ; string length
000007b: 7365 74                                  set  ; import field name
000007e: 00                                        ; import kind
000007f: 03                                        ; import signature index
; import header 7
0000080: 03                                        ; string length
0000081: 656e 76                                  env  ; import module name
0000084: 0a                                        ; string length
0000085: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
000008f: 02                                        ; import kind
0000090: 00                                        ; limits: flags
0000091: 01                                        ; limits: initial
0000022: 6f                                        ; FIXUP section size
; section "Function" (3)
0000092: 03                                        ; section code
0000093: 00                                        ; section size (guess)
0000094: 02                                        ; num functions
0000095: 01                                        ; function 0 signature index
0000096: 01                                        ; function 1 signature index
0000093: 03                                        ; FIXUP section size
; section "Export" (7)
0000097: 07                                        ; section code
0000098: 00                                        ; section size (guess)
0000099: 02                                        ; num exports
000009a: 09                                        ; string length
000009b: 6172 7261 794c 6f6f 70                   arrayLoop  ; export name
00000a4: 00                                        ; export kind
00000a5: 07                                        ; export func index
00000a6: 0b                                        ; string length
00000a7: 6372 6561 7465 4172 7261 79              createArray  ; export name
00000b2: 00                                        ; export kind
00000b3: 08                                        ; export func index
0000098: 1b                                        ; FIXUP section size
; section "Code" (10)
00000b4: 0a                                        ; section code
00000b5: 00                                        ; section size (guess)
00000b6: 02                                        ; num functions
; function body 0
00000b7: 00                                        ; func body size (guess)
00000b8: 01                                        ; local decl count
00000b9: 02                                        ; local type count
00000ba: 7f                                        ; i32
00000bb: 10                                        ; call
00000bc: 02                                        ; function index
00000bd: 41                                        ; i32.const
00000be: 01                                        ; i32 literal
00000bf: 10                                        ; call
00000c0: 03                                        ; function index
00000c1: 41                                        ; i32.const
00000c2: 02                                        ; i32 literal
00000c3: 10                                        ; call
00000c4: 03                                        ; function index
00000c5: 41                                        ; i32.const
00000c6: 03                                        ; i32 literal
00000c7: 10                                        ; call
00000c8: 03                                        ; function index
00000c9: 41                                        ; i32.const
00000ca: 04                                        ; i32 literal
00000cb: 10                                        ; call
00000cc: 03                                        ; function index
00000cd: 41                                        ; i32.const
00000ce: 05                                        ; i32 literal
00000cf: 10                                        ; call
00000d0: 03                                        ; function index
00000d1: 41                                        ; i32.const
00000d2: 06                                        ; i32 literal
00000d3: 10                                        ; call
00000d4: 03                                        ; function index
00000d5: 41                                        ; i32.const
00000d6: 07                                        ; i32 literal
00000d7: 10                                        ; call
00000d8: 03                                        ; function index
00000d9: 41                                        ; i32.const
00000da: d800                                      ; i32 literal
00000dc: 10                                        ; call
00000dd: 03                                        ; function index
00000de: 21                                        ; local.set
00000df: 00                                        ; local index
00000e0: 41                                        ; i32.const
00000e1: 00                                        ; i32 literal
00000e2: 21                                        ; local.set
00000e3: 01                                        ; local index
00000e4: 02                                        ; block
00000e5: 40                                        ; void
00000e6: 03                                        ; loop
00000e7: 40                                        ; void
00000e8: 20                                        ; local.get
00000e9: 01                                        ; local index
00000ea: 20                                        ; local.get
00000eb: 00                                        ; local index
00000ec: 10                                        ; call
00000ed: 05                                        ; function index
00000ee: 4a                                        ; i32.gt_s
00000ef: 0d                                        ; br_if
00000f0: 01                                        ; break depth
00000f1: 20                                        ; local.get
00000f2: 01                                        ; local index
00000f3: 41                                        ; i32.const
00000f4: 01                                        ; i32 literal
00000f5: 6a                                        ; i32.add
00000f6: 21                                        ; local.set
00000f7: 01                                        ; local index
00000f8: 20                                        ; local.get
00000f9: 00                                        ; local index
00000fa: 20                                        ; local.get
00000fb: 01                                        ; local index
00000fc: 10                                        ; call
00000fd: 04                                        ; function index
00000fe: 10                                        ; call
00000ff: 01                                        ; function index
0000100: 0c                                        ; br
0000101: 00                                        ; break depth
0000102: 0b                                        ; end
0000103: 0b                                        ; end
0000104: 41                                        ; i32.const
0000105: 00                                        ; i32 literal
0000106: 0f                                        ; return
0000107: 0b                                        ; end
00000b7: 50                                        ; FIXUP func body size
; function body 1
0000108: 00                                        ; func body size (guess)
0000109: 01                                        ; local decl count
000010a: 02                                        ; local type count
000010b: 7f                                        ; i32
000010c: 10                                        ; call
000010d: 02                                        ; function index
000010e: 41                                        ; i32.const
000010f: 01                                        ; i32 literal
0000110: 10                                        ; call
0000111: 03                                        ; function index
0000112: 41                                        ; i32.const
0000113: 08                                        ; i32 literal
0000114: 10                                        ; call
0000115: 03                                        ; function index
0000116: 41                                        ; i32.const
0000117: 0e                                        ; i32 literal
0000118: 10                                        ; call
0000119: 03                                        ; function index
000011a: 41                                        ; i32.const
000011b: 14                                        ; i32 literal
000011c: 10                                        ; call
000011d: 03                                        ; function index
000011e: 41                                        ; i32.const
000011f: 1b                                        ; i32 literal
0000120: 10                                        ; call
0000121: 03                                        ; function index
0000122: 21                                        ; local.set
0000123: 00                                        ; local index
0000124: 20                                        ; local.get
0000125: 00                                        ; local index
0000126: 41                                        ; i32.const
0000127: 00                                        ; i32 literal
0000128: 10                                        ; call
0000129: 04                                        ; function index
000012a: 21                                        ; local.set
000012b: 01                                        ; local index
000012c: 20                                        ; local.get
000012d: 00                                        ; local index
000012e: 10                                        ; call
000012f: 00                                        ; function index
0000130: 20                                        ; local.get
0000131: 00                                        ; local index
0000132: 41                                        ; i32.const
0000133: 03                                        ; i32 literal
0000134: 10                                        ; call
0000135: 04                                        ; function index
0000136: 10                                        ; call
0000137: 01                                        ; function index
0000138: 20                                        ; local.get
0000139: 00                                        ; local index
000013a: 41                                        ; i32.const
000013b: 04                                        ; i32 literal
000013c: 41                                        ; i32.const
000013d: 29                                        ; i32 literal
000013e: 10                                        ; call
000013f: 06                                        ; function index
0000140: 20                                        ; local.get
0000141: 00                                        ; local index
0000142: 10                                        ; call
0000143: 00                                        ; function index
0000144: 20                                        ; local.get
0000145: 00                                        ; local index
0000146: 41                                        ; i32.const
0000147: 04                                        ; i32 literal
0000148: 10                                        ; call
0000149: 04                                        ; function index
000014a: 10                                        ; call
000014b: 01                                        ; function index
000014c: 41                                        ; i32.const
000014d: 00                                        ; i32 literal
000014e: 0f                                        ; return
000014f: 0b                                        ; end
0000108: 47                                        ; FIXUP func body size
; move data: [b6, 150) -> [b7, 151)
00000b5: 9a01                                      ; FIXUP section size
; section "Data" (11)
0000151: 0b                                        ; section code
0000152: 00                                        ; section size (guess)
0000153: 06                                        ; num data segments
; data segment header 0
0000154: 00                                      
0000155: 41                                        ; i32.const
0000156: 01                                        ; i32 literal
0000157: 0b                                        ; end
0000158: 07                                        ; data segment size
; data segment data 0
0000159: 3333 3333 3333 00                         ; data segment data
; data segment header 1
0000160: 00                                      
0000161: 41                                        ; i32.const
0000162: 08                                        ; i32 literal
0000163: 0b                                        ; end
0000164: 06                                        ; data segment size
; data segment data 1
0000165: 4141 4141 4100                            ; data segment data
; data segment header 2
000016b: 00                                      
000016c: 41                                        ; i32.const
000016d: 0e                                        ; i32 literal
000016e: 0b                                        ; end
000016f: 06                                        ; data segment size
; data segment data 2
0000170: 5858 5858 5800                            ; data segment data
; data segment header 3
0000176: 00                                      
0000177: 41                                        ; i32.const
0000178: 14                                        ; i32 literal
0000179: 0b                                        ; end
000017a: 07                                        ; data segment size
; data segment data 3
000017b: 3533 3435 3335 00                         ; data segment data
; data segment header 4
0000182: 00                                      
0000183: 41                                        ; i32.const
0000184: 1b                                        ; i32 literal
0000185: 0b                                        ; end
0000186: 0e                                        ; data segment size
; data segment data 4
0000187: 6173 6461 6a6b 6673 6468 6a6b 6600        ; data segment data
; data segment header 5
0000195: 00                                      
0000196: 41                                        ; i32.const
0000197: 29                                        ; i32 literal
0000198: 0b                                        ; end
0000199: 0c                                        ; data segment size
; data segment data 5
000019a: 4865 6c6c 6f20 776f 726c 6400             ; data segment data
0000152: 53                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0117 0460 017f 017f 
0000010: 6000 017f 6002 7f7f 017f 6003 7f7f 7f01 
0000020: 7f02 6f08 0763 6f6e 736f 6c65 036c 6f67 
0000030: 0000 0763 6f6e 736f 6c65 036c 6f67 0000 
0000040: 0561 7272 6179 036e 6577 0001 0561 7272 
0000050: 6179 0470 7573 6800 0205 6172 7261 7903 
0000060: 6765 7400 0205 6172 7261 7906 6c65 6e67 
0000070: 7468 0000 0561 7272 6179 0373 6574 0003 
0000080: 0365 6e76 0a62 7974 6563 6875 6e6b 7302 
0000090: 0001 0303 0201 0107 1b02 0961 7272 6179 
00000a0: 4c6f 6f70 0007 0b63 7265 6174 6541 7272 
00000b0: 6179 0008 0a9a 0102 5001 027f 1002 4101 
00000c0: 1003 4102 1003 4103 1003 4104 1003 4105 
00000d0: 1003 4106 1003 4107 1003 41d8 0010 0321 
00000e0: 0041 0021 0102 4003 4020 0120 0010 054a 
00000f0: 0d01 2001 4101 6a21 0120 0020 0110 0410 
0000100: 010c 000b 0b41 000f 0b47 0102 7f10 0241 
0000110: 0110 0341 0810 0341 0e10 0341 1410 0341 
0000120: 1b10 0321 0020 0041 0010 0421 0120 0010 
0000130: 0020 0041 0310 0410 0120 0041 0441 2910 
0000140: 0620 0010 0020 0041 0410 0410 0141 000f 
0000150: 0b0b 5306 0041 010b 0733 3333 3333 3300 
0000160: 0041 080b 0641 4141 4141 0000 410e 0b06 
0000170: 5858 5858 5800 0041 140b 0735 3334 3533 
0000180: 3500 0041 1b0b 0e61 7364 616a 6b66 7364 
0000190: 686a 6b66 0000 4129 0b0c 4865 6c6c 6f20 
00001a0: 776f 726c 6400                          
