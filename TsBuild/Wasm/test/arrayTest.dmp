0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 04                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 00                                        ; num params
0000012: 01                                        ; num results
0000013: 7f                                        ; i32
; type 2
0000014: 60                                        ; func
0000015: 02                                        ; num params
0000016: 7f                                        ; i32
0000017: 7f                                        ; i32
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
; type 3
000001a: 60                                        ; func
000001b: 03                                        ; num params
000001c: 7f                                        ; i32
000001d: 7f                                        ; i32
000001e: 7f                                        ; i32
000001f: 01                                        ; num results
0000020: 7f                                        ; i32
0000009: 17                                        ; FIXUP section size
; section "Import" (2)
0000021: 02                                        ; section code
0000022: 00                                        ; section size (guess)
0000023: 07                                        ; num imports
; import header 0
0000024: 07                                        ; string length
0000025: 636f 6e73 6f6c 65                        console  ; import module name
000002c: 03                                        ; string length
000002d: 6c6f 67                                  log  ; import field name
0000030: 00                                        ; import kind
0000031: 00                                        ; import signature index
; import header 1
0000032: 07                                        ; string length
0000033: 636f 6e73 6f6c 65                        console  ; import module name
000003a: 03                                        ; string length
000003b: 6c6f 67                                  log  ; import field name
000003e: 00                                        ; import kind
000003f: 00                                        ; import signature index
; import header 2
0000040: 05                                        ; string length
0000041: 6172 7261 79                             array  ; import module name
0000046: 03                                        ; string length
0000047: 6e65 77                                  new  ; import field name
000004a: 00                                        ; import kind
000004b: 01                                        ; import signature index
; import header 3
000004c: 05                                        ; string length
000004d: 6172 7261 79                             array  ; import module name
0000052: 04                                        ; string length
0000053: 7075 7368                                push  ; import field name
0000057: 00                                        ; import kind
0000058: 02                                        ; import signature index
; import header 4
0000059: 05                                        ; string length
000005a: 6172 7261 79                             array  ; import module name
000005f: 03                                        ; string length
0000060: 6765 74                                  get  ; import field name
0000063: 00                                        ; import kind
0000064: 02                                        ; import signature index
; import header 5
0000065: 05                                        ; string length
0000066: 6172 7261 79                             array  ; import module name
000006b: 03                                        ; string length
000006c: 7365 74                                  set  ; import field name
000006f: 00                                        ; import kind
0000070: 03                                        ; import signature index
; import header 6
0000071: 03                                        ; string length
0000072: 656e 76                                  env  ; import module name
0000075: 0a                                        ; string length
0000076: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000080: 02                                        ; import kind
0000081: 00                                        ; limits: flags
0000082: 01                                        ; limits: initial
0000022: 60                                        ; FIXUP section size
; section "Function" (3)
0000083: 03                                        ; section code
0000084: 00                                        ; section size (guess)
0000085: 01                                        ; num functions
0000086: 01                                        ; function 0 signature index
0000084: 02                                        ; FIXUP section size
; section "Export" (7)
0000087: 07                                        ; section code
0000088: 00                                        ; section size (guess)
0000089: 01                                        ; num exports
000008a: 0b                                        ; string length
000008b: 6372 6561 7465 4172 7261 79              createArray  ; export name
0000096: 00                                        ; export kind
0000097: 06                                        ; export func index
0000088: 0f                                        ; FIXUP section size
; section "Code" (10)
0000098: 0a                                        ; section code
0000099: 00                                        ; section size (guess)
000009a: 01                                        ; num functions
; function body 0
000009b: 00                                        ; func body size (guess)
000009c: 01                                        ; local decl count
000009d: 02                                        ; local type count
000009e: 7f                                        ; i32
000009f: 10                                        ; call
00000a0: 02                                        ; function index
00000a1: 41                                        ; i32.const
00000a2: 01                                        ; i32 literal
00000a3: 10                                        ; call
00000a4: 03                                        ; function index
00000a5: 41                                        ; i32.const
00000a6: 08                                        ; i32 literal
00000a7: 10                                        ; call
00000a8: 03                                        ; function index
00000a9: 41                                        ; i32.const
00000aa: 0e                                        ; i32 literal
00000ab: 10                                        ; call
00000ac: 03                                        ; function index
00000ad: 41                                        ; i32.const
00000ae: 14                                        ; i32 literal
00000af: 10                                        ; call
00000b0: 03                                        ; function index
00000b1: 41                                        ; i32.const
00000b2: 1b                                        ; i32 literal
00000b3: 10                                        ; call
00000b4: 03                                        ; function index
00000b5: 21                                        ; local.set
00000b6: 00                                        ; local index
00000b7: 20                                        ; local.get
00000b8: 00                                        ; local index
00000b9: 41                                        ; i32.const
00000ba: 00                                        ; i32 literal
00000bb: 10                                        ; call
00000bc: 04                                        ; function index
00000bd: 21                                        ; local.set
00000be: 01                                        ; local index
00000bf: 20                                        ; local.get
00000c0: 00                                        ; local index
00000c1: 10                                        ; call
00000c2: 00                                        ; function index
00000c3: 20                                        ; local.get
00000c4: 00                                        ; local index
00000c5: 41                                        ; i32.const
00000c6: 03                                        ; i32 literal
00000c7: 10                                        ; call
00000c8: 04                                        ; function index
00000c9: 10                                        ; call
00000ca: 01                                        ; function index
00000cb: 20                                        ; local.get
00000cc: 00                                        ; local index
00000cd: 41                                        ; i32.const
00000ce: 04                                        ; i32 literal
00000cf: 41                                        ; i32.const
00000d0: 29                                        ; i32 literal
00000d1: 10                                        ; call
00000d2: 05                                        ; function index
00000d3: 20                                        ; local.get
00000d4: 00                                        ; local index
00000d5: 10                                        ; call
00000d6: 00                                        ; function index
00000d7: 20                                        ; local.get
00000d8: 00                                        ; local index
00000d9: 41                                        ; i32.const
00000da: 04                                        ; i32 literal
00000db: 10                                        ; call
00000dc: 04                                        ; function index
00000dd: 10                                        ; call
00000de: 01                                        ; function index
00000df: 41                                        ; i32.const
00000e0: 00                                        ; i32 literal
00000e1: 0f                                        ; return
00000e2: 0b                                        ; end
000009b: 47                                        ; FIXUP func body size
0000099: 49                                        ; FIXUP section size
; section "Data" (11)
00000e3: 0b                                        ; section code
00000e4: 00                                        ; section size (guess)
00000e5: 06                                        ; num data segments
; data segment header 0
00000e6: 00                                      
00000e7: 41                                        ; i32.const
00000e8: 01                                        ; i32 literal
00000e9: 0b                                        ; end
00000ea: 07                                        ; data segment size
; data segment data 0
00000eb: 3333 3333 3333 00                         ; data segment data
; data segment header 1
00000f2: 00                                      
00000f3: 41                                        ; i32.const
00000f4: 08                                        ; i32 literal
00000f5: 0b                                        ; end
00000f6: 06                                        ; data segment size
; data segment data 1
00000f7: 4141 4141 4100                            ; data segment data
; data segment header 2
00000fd: 00                                      
00000fe: 41                                        ; i32.const
00000ff: 0e                                        ; i32 literal
0000100: 0b                                        ; end
0000101: 06                                        ; data segment size
; data segment data 2
0000102: 5858 5858 5800                            ; data segment data
; data segment header 3
0000108: 00                                      
0000109: 41                                        ; i32.const
000010a: 14                                        ; i32 literal
000010b: 0b                                        ; end
000010c: 07                                        ; data segment size
; data segment data 3
000010d: 3533 3435 3335 00                         ; data segment data
; data segment header 4
0000114: 00                                      
0000115: 41                                        ; i32.const
0000116: 1b                                        ; i32 literal
0000117: 0b                                        ; end
0000118: 0e                                        ; data segment size
; data segment data 4
0000119: 6173 6461 6a6b 6673 6468 6a6b 6600        ; data segment data
; data segment header 5
0000127: 00                                      
0000128: 41                                        ; i32.const
0000129: 29                                        ; i32 literal
000012a: 0b                                        ; end
000012b: 0c                                        ; data segment size
; data segment data 5
000012c: 4865 6c6c 6f20 776f 726c 6400             ; data segment data
00000e4: 53                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0117 0460 017f 017f 
0000010: 6000 017f 6002 7f7f 017f 6003 7f7f 7f01 
0000020: 7f02 6007 0763 6f6e 736f 6c65 036c 6f67 
0000030: 0000 0763 6f6e 736f 6c65 036c 6f67 0000 
0000040: 0561 7272 6179 036e 6577 0001 0561 7272 
0000050: 6179 0470 7573 6800 0205 6172 7261 7903 
0000060: 6765 7400 0205 6172 7261 7903 7365 7400 
0000070: 0303 656e 760a 6279 7465 6368 756e 6b73 
0000080: 0200 0103 0201 0107 0f01 0b63 7265 6174 
0000090: 6541 7272 6179 0006 0a49 0147 0102 7f10 
00000a0: 0241 0110 0341 0810 0341 0e10 0341 1410 
00000b0: 0341 1b10 0321 0020 0041 0010 0421 0120 
00000c0: 0010 0020 0041 0310 0410 0120 0041 0441 
00000d0: 2910 0520 0010 0020 0041 0410 0410 0141 
00000e0: 000f 0b0b 5306 0041 010b 0733 3333 3333 
00000f0: 3300 0041 080b 0641 4141 4141 0000 410e 
0000100: 0b06 5858 5858 5800 0041 140b 0735 3334 
0000110: 3533 3500 0041 1b0b 0e61 7364 616a 6b66 
0000120: 7364 686a 6b66 0000 4129 0b0c 4865 6c6c 
0000130: 6f20 776f 726c 6400                     
