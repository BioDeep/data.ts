0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 03                                        ; num types
; type 0
000000b: 60                                        ; func
000000c: 01                                        ; num params
000000d: 7f                                        ; i32
000000e: 01                                        ; num results
000000f: 7f                                        ; i32
; type 1
0000010: 60                                        ; func
0000011: 02                                        ; num params
0000012: 7f                                        ; i32
0000013: 7f                                        ; i32
0000014: 01                                        ; num results
0000015: 7f                                        ; i32
; type 2
0000016: 60                                        ; func
0000017: 00                                        ; num params
0000018: 01                                        ; num results
0000019: 7f                                        ; i32
0000009: 10                                        ; FIXUP section size
; section "Import" (2)
000001a: 02                                        ; section code
000001b: 00                                        ; section size (guess)
000001c: 04                                        ; num imports
; import header 0
000001d: 07                                        ; string length
000001e: 636f 6e73 6f6c 65                        console  ; import module name
0000025: 03                                        ; string length
0000026: 6c6f 67                                  log  ; import field name
0000029: 00                                        ; import kind
000002a: 00                                        ; import signature index
; import header 1
000002b: 06                                        ; string length
000002c: 7374 7269 6e67                           string  ; import module name
0000032: 03                                        ; string length
0000033: 6164 64                                  add  ; import field name
0000036: 00                                        ; import kind
0000037: 01                                        ; import signature index
; import header 2
0000038: 06                                        ; string length
0000039: 7374 7269 6e67                           string  ; import module name
000003f: 08                                        ; string length
0000040: 746f 5374 7269 6e67                      toString  ; import field name
0000048: 00                                        ; import kind
0000049: 00                                        ; import signature index
; import header 3
000004a: 03                                        ; string length
000004b: 656e 76                                  env  ; import module name
000004e: 0a                                        ; string length
000004f: 6279 7465 6368 756e 6b73                 bytechunks  ; import field name
0000059: 02                                        ; import kind
000005a: 00                                        ; limits: flags
000005b: 01                                        ; limits: initial
000001b: 40                                        ; FIXUP section size
; section "Function" (3)
000005c: 03                                        ; section code
000005d: 00                                        ; section size (guess)
000005e: 03                                        ; num functions
000005f: 02                                        ; function 0 signature index
0000060: 02                                        ; function 1 signature index
0000061: 02                                        ; function 2 signature index
000005d: 04                                        ; FIXUP section size
; section "Global" (6)
0000062: 06                                        ; section code
0000063: 00                                        ; section size (guess)
0000064: 02                                        ; num globals
0000065: 7f                                        ; i32
0000066: 01                                        ; global mutability
0000067: 41                                        ; i32.const
0000068: e300                                      ; i32 literal
000006a: 0b                                        ; end
000006b: 7f                                        ; i32
000006c: 01                                        ; global mutability
000006d: 41                                        ; i32.const
000006e: e400                                      ; i32 literal
0000070: 0b                                        ; end
0000063: 0d                                        ; FIXUP section size
; section "Export" (7)
0000071: 07                                        ; section code
0000072: 00                                        ; section size (guess)
0000073: 03                                        ; num exports
0000074: 04                                        ; string length
0000075: 4d61 696e                                Main  ; export name
0000079: 00                                        ; export kind
000007a: 03                                        ; export func index
000007b: 05                                        ; string length
000007c: 4865 6c6c 6f                             Hello  ; export name
0000081: 00                                        ; export kind
0000082: 04                                        ; export func index
0000083: 05                                        ; string length
0000084: 576f 726c 64                             World  ; export name
0000089: 00                                        ; export kind
000008a: 05                                        ; export func index
0000072: 18                                        ; FIXUP section size
; section "Code" (10)
000008b: 0a                                        ; section code
000008c: 00                                        ; section size (guess)
000008d: 03                                        ; num functions
; function body 0
000008e: 00                                        ; func body size (guess)
000008f: 01                                        ; local decl count
0000090: 02                                        ; local type count
0000091: 7f                                        ; i32
0000092: 10                                        ; call
0000093: 04                                        ; function index
0000094: 41                                        ; i32.const
0000095: 01                                        ; i32 literal
0000096: 10                                        ; call
0000097: 01                                        ; function index
0000098: 10                                        ; call
0000099: 05                                        ; function index
000009a: 10                                        ; call
000009b: 01                                        ; function index
000009c: 21                                        ; local.set
000009d: 00                                        ; local index
000009e: 41                                        ; i32.const
000009f: 03                                        ; i32 literal
00000a0: 23                                        ; global.get
00000a1: 00                                        ; global index
00000a2: 10                                        ; call
00000a3: 02                                        ; function index
00000a4: 10                                        ; call
00000a5: 01                                        ; function index
00000a6: 41                                        ; i32.const
00000a7: 08                                        ; i32 literal
00000a8: 10                                        ; call
00000a9: 01                                        ; function index
00000aa: 23                                        ; global.get
00000ab: 01                                        ; global index
00000ac: 10                                        ; call
00000ad: 02                                        ; function index
00000ae: 10                                        ; call
00000af: 01                                        ; function index
00000b0: 41                                        ; i32.const
00000b1: 0c                                        ; i32 literal
00000b2: 10                                        ; call
00000b3: 01                                        ; function index
00000b4: 23                                        ; global.get
00000b5: 00                                        ; global index
00000b6: 23                                        ; global.get
00000b7: 01                                        ; global index
00000b8: 6a                                        ; i32.add
00000b9: 10                                        ; call
00000ba: 02                                        ; function index
00000bb: 10                                        ; call
00000bc: 01                                        ; function index
00000bd: 21                                        ; local.set
00000be: 01                                        ; local index
00000bf: 20                                        ; local.get
00000c0: 00                                        ; local index
00000c1: 10                                        ; call
00000c2: 00                                        ; function index
00000c3: 20                                        ; local.get
00000c4: 01                                        ; local index
00000c5: 10                                        ; call
00000c6: 00                                        ; function index
00000c7: 20                                        ; local.get
00000c8: 00                                        ; local index
00000c9: 0f                                        ; return
00000ca: 0b                                        ; end
000008e: 3c                                        ; FIXUP func body size
; function body 1
00000cb: 00                                        ; func body size (guess)
00000cc: 00                                        ; local decl count
00000cd: 41                                        ; i32.const
00000ce: 10                                        ; i32 literal
00000cf: 0f                                        ; return
00000d0: 0b                                        ; end
00000cb: 05                                        ; FIXUP func body size
; function body 2
00000d1: 00                                        ; func body size (guess)
00000d2: 00                                        ; local decl count
00000d3: 41                                        ; i32.const
00000d4: 16                                        ; i32 literal
00000d5: 0f                                        ; return
00000d6: 0b                                        ; end
00000d1: 05                                        ; FIXUP func body size
000008c: 4a                                        ; FIXUP section size
; section "Data" (11)
00000d7: 0b                                        ; section code
00000d8: 00                                        ; section size (guess)
00000d9: 06                                        ; num data segments
; data segment header 0
00000da: 00                                      
00000db: 41                                        ; i32.const
00000dc: 01                                        ; i32 literal
00000dd: 0b                                        ; end
00000de: 02                                        ; data segment size
; data segment data 0
00000df: 2000                                      ; data segment data
; data segment header 1
00000e1: 00                                      
00000e2: 41                                        ; i32.const
00000e3: 03                                        ; i32 literal
00000e4: 0b                                        ; end
00000e5: 05                                        ; data segment size
; data segment data 1
00000e6: 6c65 7420 00                              ; data segment data
; data segment header 2
00000eb: 00                                      
00000ec: 41                                        ; i32.const
00000ed: 08                                        ; i32 literal
00000ee: 0b                                        ; end
00000ef: 04                                        ; data segment size
; data segment data 2
00000f0: 202b 2000                                 ; data segment data
; data segment header 3
00000f4: 00                                      
00000f5: 41                                        ; i32.const
00000f6: 0c                                        ; i32 literal
00000f7: 0b                                        ; end
00000f8: 04                                        ; data segment size
; data segment data 3
00000f9: 203d 2000                                 ; data segment data
; data segment header 4
00000fd: 00                                      
00000fe: 41                                        ; i32.const
00000ff: 10                                        ; i32 literal
0000100: 0b                                        ; end
0000101: 06                                        ; data segment size
; data segment data 4
0000102: 4865 6c6c 6f00                            ; data segment data
; data segment header 5
0000108: 00                                      
0000109: 41                                        ; i32.const
000010a: 16                                        ; i32 literal
000010b: 0b                                        ; end
000010c: 06                                        ; data segment size
; data segment data 5
000010d: 576f 726c 6400                            ; data segment data
00000d8: 3a                                        ; FIXUP section size
;; dump
0000000: 0061 736d 0100 0000 0110 0360 017f 017f 
0000010: 6002 7f7f 017f 6000 017f 0240 0407 636f 
0000020: 6e73 6f6c 6503 6c6f 6700 0006 7374 7269 
0000030: 6e67 0361 6464 0001 0673 7472 696e 6708 
0000040: 746f 5374 7269 6e67 0000 0365 6e76 0a62 
0000050: 7974 6563 6875 6e6b 7302 0001 0304 0302 
0000060: 0202 060d 027f 0141 e300 0b7f 0141 e400 
0000070: 0b07 1803 044d 6169 6e00 0305 4865 6c6c 
0000080: 6f00 0405 576f 726c 6400 050a 4a03 3c01 
0000090: 027f 1004 4101 1001 1005 1001 2100 4103 
00000a0: 2300 1002 1001 4108 1001 2301 1002 1001 
00000b0: 410c 1001 2300 2301 6a10 0210 0121 0120 
00000c0: 0010 0020 0110 0020 000f 0b05 0041 100f 
00000d0: 0b05 0041 160f 0b0b 3a06 0041 010b 0220 
00000e0: 0000 4103 0b05 6c65 7420 0000 4108 0b04 
00000f0: 202b 2000 0041 0c0b 0420 3d20 0000 4110 
0000100: 0b06 4865 6c6c 6f00 0041 160b 0657 6f72 
0000110: 6c64 00                                 
